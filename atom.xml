<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>六个周</title>
  
  <subtitle>Talk is cheap,show me the code!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://liugezhou.online/"/>
  <updated>2020-08-04T05:38:30.433Z</updated>
  <id>http://liugezhou.online/</id>
  
  <author>
    <name>liugezhou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Just JavaScript--01|Mental Models</title>
    <link href="http://liugezhou.online/2020/08/04/%5BJust%20JavaScript%5D%2001.%20Mental%20Models/"/>
    <id>http://liugezhou.online/2020/08/04/[Just JavaScript] 01. Mental Models/</id>
    <published>2020-08-04T02:15:00.000Z</published>
    <updated>2020-08-04T05:38:30.433Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><blockquote><p> Dan Abramov:Redux作者，React社区大神,前一段时间发起了一个活动，通过邮箱订阅他写的一个小专栏，每写好一片草稿就会发到你的邮箱里面<br>第一节的标题为‘Mental Models’，我的理解为“思维模式”。<br>下面内容是在原作基础上，用我的大白话翻译的结果，文章原文内容摘抄至末尾。 </p></blockquote><a id="more"></a><blockquote><p>先看一段代码  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let a = 10;</span><br><span class="line">let b = a;</span><br><span class="line">a = 0;</span><br></pre></td></tr></table></figure><blockquote><p>在进行下面的阅读前先回答这样一个问题：这段代码的执行结果是怎样的？</p></blockquote><blockquote><p>如果你已经写了一段时间JS的代码，你心中可能在想：就这几行代码比我每天要写的代码不知道要简单多少倍，此问究竟为何意？<br>这个小练习的用意并不是来向你介绍JS的变量等语法的。我猜想你对这些东西游刃有余。我的目的是为了让你意识到且对你的思维模式有一个认识。</p></blockquote><h4 id="什么是思维模式-What’s-a-Mental-Model"><a href="#什么是思维模式-What’s-a-Mental-Model" class="headerlink" title="什么是思维模式(What’s a Mental Model?)"></a>什么是思维模式(What’s a Mental Model?)</h4><blockquote><p>带着你的想法再次阅读上面代码且真正确认下代码的运行结果是什么(我们会在后面解释为什么你的想法是如此的重要)。</p></blockquote><blockquote><p>当你第二次开始认真阅读这几行代码的时候，一步一步的跟随你脑海中的想法去思考，你的内心独白可能是这样的：  </p><ul><li>let a =10;    声明一个名为a的变量，对其赋值为 10；</li><li>let b = a;    声明一个名为b的变量，对其赋值为a，然后a的值为10，因此变量b的值也会10；  </li><li>a = 0;      变量a再次赋值为0，因此现在 a的值为0，b的值为10.<br>这大概就是我们的答案。</li></ul></blockquote><blockquote><p>可能你的内心独白、思考有些不同，获取你干脆直接读a=10，不去想文绉绉的<code>赋值</code>这个词，或许你读这段代码的顺序稍有不同，当然也或许你得到了不同的结果<br>然后你回想下你脑中的思考过程、内心独白，捕捉你脑子在思考这段代码的种种细节，有可能你会思考第二行代码为：把a设置为b等等细节吧，自己把握。  </p></blockquote><blockquote><p>您可能会发现，对于每个熟悉的基本编程概念(如变量)和对其进行的操作(如设置其值)，都有一组与之关联的根深蒂固的类比。其中一些可能来自现实世界。还有一些可能是你之前学过的其他领域的东西,比如数字属于数学范畴，这些类比可能相互重叠甚至相互矛盾，但它们仍然帮助您理解代码中发生的事情。</p></blockquote><blockquote><p>例如，许多人第一次学习变量时把它当成可以放东西的盒子,当你看到一个变量时，即使你不再生动地想象盒子，它们在你的想象中仍可能是方形的。这些近似关于事物如何在你的头脑中运作的过程被称为思维模式(Mental Model)，它们可能是视觉、空间和机械物理等的组合。</p></blockquote><blockquote><p>这些直觉(比如变量是个”盒子”)影响着我们一生阅读代码的方式,当然有些时候，我们的思维模式是错误的。也许我们之前读过的一些教程为了快速理解而牺牲了它的一些正确性去学习。也许我们错误地转移了对特定语言特征的直觉，比如思维定势像理解之前的语言一样去理解新的概念。也许我们从一段代码中推断出一个心理历程，但从未真正验证过它是否准确。</p></blockquote><blockquote><p>认识到这些问题并修复这些问题就是[Just JavaScript]的初衷。我们将逐步构建(或者可能重新构建)您的JavaScript思维模式，使其更加准确和有用。一个好的思维模式将帮助你更快地发现和修正错误，更好地理解别人的代码，并对你所写的代码感到自信。<br>(顺便说一下，a等于0 b等于10是正确答案。)</p></blockquote><h4 id="编码，快和慢-Coding-Fast-and-Slow"><a href="#编码，快和慢-Coding-Fast-and-Slow" class="headerlink" title="编码，快和慢(Coding, Fast and Slow)"></a>编码，快和慢(Coding, Fast and Slow)</h4><blockquote><p>丹尼尔·卡尼曼（Daniel Kahneman）的《Thinking, Fast and Slow》是一本广受欢迎的非小说类书籍。 其中心论点是，人类在思考时会使用两种不同的“系统”。</p></blockquote><blockquote><p>只要有可能，我们就依赖快速系统。我们和许多动物都有这个系统，这给了我们惊人的能力，比如走路不摔倒。这个快速的系统擅长于模式匹配(生存所必需的!)和直觉反应。但它不擅长规划。</p></blockquote><blockquote><p>独特的是，由于额叶的发展，人类还拥有一个缓慢的思考系统。这个缓慢的系统负责复杂的逐步推理。它让我们计划未来的事件，参与争论，或遵循数学证明。</p></blockquote><blockquote><p>因为使用慢速系统会让人精神疲惫，所以即使在处理像编码这样的智力任务时，我们也倾向于默认使用快速系统。</p></blockquote><blockquote><p>想象一下，您正处于大量工作之中，并且想要快速确定下面这个方法的作用。 快速浏览一下： </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function duplicateSpreadsheet(original) &#123;</span><br><span class="line">  if (original.hasPendingChanges) &#123;</span><br><span class="line">    throw new Error(&apos;You need to save the file before you can duplicate it.&apos;);</span><br><span class="line">  &#125;</span><br><span class="line">  let copy = &#123;</span><br><span class="line">    created: Date.now(),</span><br><span class="line">    author: original.author,</span><br><span class="line">    cells: original.cells,</span><br><span class="line">    metadata: original.metadata,</span><br><span class="line">  &#125;;</span><br><span class="line">  copy.metadata.title = &apos;Copy of &apos; + original.metadata.title;</span><br><span class="line">  return copy;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>通过上面快读代码阅读，你可能会得到如下信息：  </p><ul><li>这是函数的作用是复制一个对象  </li><li>如果这个对象有hasPendingChanges属性，会抛出一个错误。  </li><li>复制original这个对象的时候，返回copy对象的metadata的title属性加了一个副本。 </li></ul></blockquote><blockquote><p>您可能没有注意到的是(如果您注意到了，说明你可不简单啊!)：这个函数还会意外地更改原始电子表格的标题。<br>(注:比如原始original对象的metadata属性的title作为test，这个函数执行后，原始original对象的metadata属性的title就会变为‘Copy of test’)   </p></blockquote><blockquote><p>每个程序员每天都会遇到这样的错误。但是现在您知道存在一个bug，您会以不同的方式阅读代码吗? 如果你一直在快速模式下阅读代码，你可能会切换到更费力的缓慢模式来查找。</p></blockquote><blockquote><p>在快速模式中，我们根据命名、注释及其整体结构来猜测代码的作用。在慢速模式下，我们一步一步地追溯代码所做的事情。</p></blockquote><blockquote><p>这就是为什么拥有一个正确的思维模式是如此重要。在我们的头脑中模拟计算机已经够困难的了–更糟糕的是，这些努力都浪费在错误的思维模式上了。  </p></blockquote><blockquote><p>如果根本找不到bug，也不要担心。这意味着你将从这门课中获得最大的收获!在下一个模块中，我们将一起重建JavaScript的思维模式，以便您能够清楚地看到这个bug。 </p></blockquote><blockquote><p>在下一个模块中，我们将开始为一些最基本的JavaScript概念、值和变量构建思维模式。</p></blockquote><h4 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h4><p><img src="http://img.liugezhou.online/JS/JustJS_01.png" alt="JustJS_01"></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt; Dan Abramov:Redux作者，React社区大神,前一段时间发起了一个活动，通过邮箱订阅他写的一个小专栏，每写好一片草稿就会发到你的邮箱里面&lt;br&gt;第一节的标题为‘Mental Models’，我的理解为“思维模式”。&lt;br&gt;下面内容是在原作基础上，用我的大白话翻译的结果，文章原文内容摘抄至末尾。 &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Just JavaScript" scheme="http://liugezhou.online/categories/Just-JavaScript/"/>
    
    
      <category term="Just JavaScript" scheme="http://liugezhou.online/tags/Just-JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第四十四期</title>
    <link href="http://liugezhou.online/2020/07/20/issue-44/"/>
    <id>http://liugezhou.online/2020/07/20/issue-44/</id>
    <published>2020-07-20T01:16:00.000Z</published>
    <updated>2020-07-20T04:51:03.054Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周是2020年的第二十九个周末。<br>这里记录过去一周，我的一些总结。</p></blockquote><!-- 制作一张最能反映过去一周的周图片 --><p><img src="http://img.liugezhou.online/blog/weekly44.jpeg" alt="weekly-44"></p><a id="more"></a><h4 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h4><blockquote><p>本周比较糟心的一件事是一哥们赌博，欠账三十多万，不断借钱、谎话连篇、不还钱的事。    </p><p>然后就着这件事跟小盆子与阿飞聊到了诈骗一事，让我笑的快要流下泪来。<br>阿飞在大一大二那会，qq上一朋友要他银行卡号还有验证码什么的，没想那么多报了卡号，然后卡里的钱被全部转移。<br>据他说述，在得知被骗之后，遂报警，阴差阳错，人生生平第一次坐上警车–警局报案。<br>在做了一个简单的笔录后，警察叔叔问起阿飞被诈骗金额的时候。<br>阿飞委屈答到被骗了150块。<br>…………<br>按规定诈骗金额要达到三千以上才可以立案调查的，如果不到三千的话去报案据说最多会参加公安给你提供的防诈骗培训，不会介入。<br>阿飞的150块被诈骗事件以及当时的心理活动在述说之，我们狂笑不止。但随后一股悲哀随之涌上心头，150块的诈骗的处理措施，不仅使得一个青少年对警察叔叔失去了一份信任，也使得心凉凉。这种久违的开怀大笑背后，隐藏着东西、折射的社会制度规则真是不简单。  </p></blockquote><h4 id="Github北极代码库计划正式实施"><a href="#Github北极代码库计划正式实施" class="headerlink" title="Github北极代码库计划正式实施"></a>Github北极代码库计划正式实施</h4><blockquote><p>这几天登录自己的Github账号，进入主页面的时候，发现在Highlights下面有一个雪花的小图标显示。<br>有这个雪花代表着：你代码仓库中的文字、代码被冰封到了北极。<br>据称可以冰封千年：代码恒久远，Bug永流传啊。</p></blockquote><h4 id="VScode画流程图"><a href="#VScode画流程图" class="headerlink" title="VScode画流程图"></a><a href="https://mp.weixin.qq.com/s/4JTkjbulPd0L3aI670bEuw" target="_blank" rel="noopener">VScode画流程图</a></h4><blockquote><p>VScode插件：Drawio<br>通过这个插件可以在VSCode中画出完美流程图、思维导图与UML图等。</p></blockquote><h4 id="lodash"><a href="#lodash" class="headerlink" title="lodash"></a>lodash</h4><blockquote><p>loadsh是一个一致性、模块化、高性能的JavaScript实用工具。  </p></blockquote><blockquote><p>在看lodash的历史中，了解到了一些它与underscore的关系：    </p></blockquote><blockquote><p>Node.js的兴起把我们带到了一个没有DOM和BOM的世界，开发过程我们开始迫切需要的是函数、库、我们要处理数字、处理字符串、处理数据等.<br>这个时候underscore出现，unserscore一度成为前端代码排名第二的库(jQuery为第一) 。<br>随后underscore迎来挑战，这就是lodash。<br>lodash也使用<code>_</code>符号,而且underscore的所有函数lodash均包括，还增加了unserscore没有的函数，不仅如此，lodash性能还是underscore的四五倍，因此，慢慢的慢慢的，社区意见也偏向于lodash是唯一选择。  </p></blockquote><blockquote><p><a href="https://zhuanlan.zhihu.com/p/20414991" target="_blank" rel="noopener">lodash与underscore、Prototype与jQuery的恩怨情仇</a></p></blockquote><h4 id="18个常用webpack插件"><a href="#18个常用webpack插件" class="headerlink" title="18个常用webpack插件"></a><a href="https://mp.weixin.qq.com/s/FPENfKo7mObEYcVP0wofRA" target="_blank" rel="noopener">18个常用webpack插件</a></h4><blockquote><p>vue对webpack的封装很完全，但对初学者来说又不显眼。我们只知道vue-cli生成的项目提供了一个vue.config.js的配置文件，这个配置文件就是与webpack的联系了，因此很有必要对webpack这个庞然大物肃然起敬。<br>👆这篇文件就是总结了一些webpack的插件，可能初期用不到或想不到，但是有个了解后，遇到相关场景的时候–信手拈来。  </p></blockquote><h4 id="博客"><a href="#博客" class="headerlink" title="博客"></a><a href="https://anuraghazra.github.io/" target="_blank" rel="noopener">博客</a></h4><blockquote><p>一名来自印度的19岁小伙的个人博客网站，cool！</p></blockquote><h4 id="git仓库一次性push到多个仓库"><a href="#git仓库一次性push到多个仓库" class="headerlink" title="git仓库一次性push到多个仓库"></a>git仓库一次性push到多个仓库</h4><blockquote><p>之前我在将一个项目push到多个仓库的时候，使用的是 git remote add  gitname XXXX 再次添加一个远程仓库，然后根据不同的名字去git push.<br>然想要push一次就推送到多个仓库，直接使用 <code>git remote set-url --add  origin  https://xxxx</code>即可。 </p></blockquote><h4 id="End"><a href="#End" class="headerlink" title="End"></a>End</h4><blockquote><p>如果你花钱买，你就是客户。<br>如果你免费获得，你就是产品。  </p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本周是2020年的第二十九个周末。&lt;br&gt;这里记录过去一周，我的一些总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- 制作一张最能反映过去一周的周图片 --&gt;
&lt;p&gt;&lt;img src=&quot;http://img.liugezhou.online/blog/weekly44.jpeg&quot; alt=&quot;weekly-44&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>lodash</title>
    <link href="http://liugezhou.online/2020/07/13/lodash/"/>
    <id>http://liugezhou.online/2020/07/13/lodash/</id>
    <published>2020-07-13T01:24:00.000Z</published>
    <updated>2020-08-04T05:40:10.453Z</updated>
    
    <content type="html"><![CDATA[<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><blockquote><p>Lodash是一个一致性、模块化、高性能的JavaScript实用工具库。</p></blockquote><a id="more"></a><h4 id="数组Array–39"><a href="#数组Array–39" class="headerlink" title="数组Array–39"></a>数组Array–39</h4><h5 id="C-3"><a href="#C-3" class="headerlink" title="C-3"></a>C-3</h5><blockquote><ol><li>_.chunk(array,[size=2]):将数组拆分成两个长度的区块，并将这些区块组成一个新的数组。  </li><li>_.compact(array):创建一个新数组，包含原数组中所有的非假值元素。 </li><li>_.concat(array, [values]):创建一个新数组，将array与任何数组 或值连接在一起。</li></ol></blockquote><h5 id="D-7"><a href="#D-7" class="headerlink" title="D-7"></a>D-7</h5><blockquote><ol start="4"><li>_.difference(array,[values]):arr1中的数不在给定的<code>values</code>中的其他值。    </li><li><em>.diffrenceBy(array,[values],[iteratee=</em>.identity]):同上，不同的是：_.diffrenceBy([1.2, 3.4, 4.5],[2.3, 4.9,5],Math.floor)返回的是：[1.2, 3.4]  </li><li><em>.diffrenceWith(array,[values], [comparator]):同上，接收的是比较器。</em>.diffrenceWith([{‘x’:1,’y’:2},{‘x’:2,’y’:1}],[{‘x’:1,’y’:2}],_.isEqual)返回的是：[{‘x’:1,’y’:2}]   </li><li>_.drop(array, [n=2]):在js数组中，array.shift()只会去除第一个元素，这个方法是去除前n个元素。   </li><li>_.dropRight(array,[n=2]):在js数组中。array.pop()只会去除数组最后一个元素，这个方法是去除后n个元素。</li><li><em>.dropRightWhile(array,[predicate=</em>.identity])：创建一个切片数组，去除array中符合predicate这个规则的那些数值。</li><li><em>.dropWhile(array,[predicate=</em>.identity]):同上，去除的是array数组不符合predicate这个规则的那些数值。</li></ol></blockquote><h5 id="F-8"><a href="#F-8" class="headerlink" title="F-8"></a>F-8</h5><blockquote><ol start="11"><li>_.fill(array.value,[start=0],[end=array.length]):使用value值来填充(替换)array,从start开始，到end结束(不包含end)，这个方法不是创建新数组，而是改变原数组。   </li><li><em>.findIndex(array,[predicate=</em>.identity],[fromIndex=0]):返回元素的索引值,不是值本身，否则返回-1。  </li><li><em>.findLastIndex(array,[predicate=</em>.identity],[fromIndex=array.length-1]):同上，区别是从数组结尾开始迭代查找。 </li><li>_.first(array)_或者.head(array):获取数组的第一个元素</li><li>_.flatten(array):减少一级array嵌套深度。    </li><li>_.flattenDeep(array):将array递归为一维数组。   </li><li>_.flattenDepth(array,[depth=1]):根据depth减少array的嵌套层级。   </li><li>_.formPairs(pairs):返回一个由键值对pairs构成的对象。  </li></ol></blockquote><h5 id="I-4"><a href="#I-4" class="headerlink" title="I-4"></a>I-4</h5><blockquote><ol start="19"><li>_.indexOf(array,value,[fromIndex=0]):返回首次value在数组中被找到的索引值。    </li><li>_.initial(array):返回一个新数组，数组内容为除了数组array最后一个元素外的所有元素。  </li><li>_.intersetion(array1,array2,array3):返回array1、array2和array3的每个数组都包含的数值。    </li><li><em>.intersetionBy(arrays,[iteratee=</em>.identity]):同上，区别是接收一个规则，通过该规则每个值都会进行计算，对计算结果的值进行比较</li></ol></blockquote><h5 id="J-1"><a href="#J-1" class="headerlink" title="J-1"></a>J-1</h5><blockquote><ol start="23"><li>_.join(array,[separator=’,’]):将array转为由<code>separator</code>分割的字符串</li></ol></blockquote><h5 id="L-2"><a href="#L-2" class="headerlink" title="L-2"></a>L-2</h5><blockquote><ol start="24"><li>_.last(array):原数组不变，返回该数组的最后一个元素。  </li><li>_.lastIndexOf(array,value,[fromIndex=array.length-1])：与indexOf相反，从最后一个值开始查找第一次出现value值的位置。</li></ol></blockquote><h5 id="N-1"><a href="#N-1" class="headerlink" title="N-1"></a>N-1</h5><blockquote><ol start="26"><li>_.nth(array,[n=0]):返回array数组的索引为n的元素，如果为负数，则从结尾开始的第n个元素  </li></ol></blockquote><h5 id="P-3"><a href="#P-3" class="headerlink" title="P-3"></a>P-3</h5><blockquote><ol start="27"><li>_.pull(array,[values]):移除array数组中的values包含的值  </li><li>_.pullAll(array,values):这个方法与pull类似，不同的是pull方法传values值的时候是用逗号隔开，而pullAll直接传入一个数组。   </li><li>_.pullAt(array,[indexes]):通过索引删除array中的值,会改变原数组，此方法会返回删除的值</li></ol></blockquote><h5 id="R-2"><a href="#R-2" class="headerlink" title="R-2"></a>R-2</h5><blockquote><ol start="30"><li>_.remove(array,function):该方法会改变原始数组，移除那些function命中的值。</li><li>_.reverse(array):数组反转,使得第一个元素变为最后一个元素，第二个元素变为倒数第二个元素。</li></ol></blockquote><h5 id="S-3"><a href="#S-3" class="headerlink" title="S-3"></a>S-3</h5><blockquote><ol start="32"><li>_.slice(arrat,start,end):裁剪数组，从start位置开始，到end位置结束（不包含） </li><li>_.sortedUniq(array):返回一个不重复的数组。  </li></ol></blockquote><h5 id="T-3"><a href="#T-3" class="headerlink" title="T-3"></a>T-3</h5><blockquote><ol start="34"><li>_.tail(array):获取数组array除了第一个元素的其他元素。 </li><li>_.take(array,[n=2]):从数组array第一个位置开始，获取n个元素。    </li><li>_.takeRight(array,[n=2]):从数组array的倒数第一个位置开始，获取n个元素。 </li></ol></blockquote><h5 id="U-8"><a href="#U-8" class="headerlink" title="U-8"></a>U-8</h5><blockquote><ol start="37"><li>_.union(arr1,arr2,arr3):返回数组arr1，arr2，arr3数组的并集  </li><li>_unzip(zipped): _.unzip([ [ ‘liu’,18,’eat’],[‘liuyl’,17,’drink’] ])   返回[ [ ‘liu’,’liuyl’], [18,17 ],[ ‘eat’,’drink’ ]] </li></ol></blockquote><h4 id="集合Collection-Array-Object-–27"><a href="#集合Collection-Array-Object-–27" class="headerlink" title="集合Collection[Array | Object]–27"></a>集合Collection[Array | Object]–27</h4><h5 id="C-1"><a href="#C-1" class="headerlink" title="C-1"></a>C-1</h5><blockquote><ol><li><em>.countBy(collection,[ iteratee=</em>.identity]):创建一个组成对象，key键是经过迭代函数处理集合中每个元素的返回值，每个key键对应的值是返回该值的次数。其中iteratee可以是 数组、函数、对象、字符串等。</li></ol></blockquote><h5 id="E-3"><a href="#E-3" class="headerlink" title="E-3"></a>E-3</h5><blockquote><ol start="2"><li><em>.each(collection,[ iteratee=</em>.identity ]-Function):遍历，iteratee接受的参数依次是 当前值、索引、整个集合  </li><li><em>eachRight(collection,[ iteratee=</em>.identity ]-Function):同上，不同之处为从右向左遍历。 </li><li><em>.every(collection,[ predicate=</em>.identity ]):通过断言函数predicate,检查collection中的所有元素是否都返回真值,若返回假值，迭代马上停止。 </li></ol></blockquote><h5 id="F-6"><a href="#F-6" class="headerlink" title="F-6"></a>F-6</h5><blockquote><ol start="5"><li><em>.filter(collection,[ predicate=</em>.identity]):返回断言函数predicate返回值为真值的所有元素的数组。 </li><li>_.find(collection,[ predicate], [ fromIndex=0]):返回断言函数predicate第一个值为真值的集合的第一个元素。  </li><li>_.findLast():略，同上，集合尾部开始迭代。    </li><li><em>.flatMap(collection,[ iteratte=</em>.idendity]):创建一个扁平化的数组。    </li><li><em>.flatMapDeep(collection,[ iteratte=</em>.idendity]):同上，区别是会继续扁平化递归映射的结果。 </li><li><em>.flatMapDepth(collection,[ iteratte=</em>.idendity],[ depth=1]):同上，区别是根据depth值扁平化递归映射结果。  </li></ol></blockquote><h4 id="日期Date-1"><a href="#日期Date-1" class="headerlink" title="日期Date-1"></a>日期Date-1</h4><h4 id="函数Function-23"><a href="#函数Function-23" class="headerlink" title="函数Function-23"></a>函数Function-23</h4><h4 id="Lang–56"><a href="#Lang–56" class="headerlink" title="Lang–56"></a>Lang–56</h4><h4 id="数学Math–15"><a href="#数学Math–15" class="headerlink" title="数学Math–15"></a>数学Math–15</h4><h4 id="数字Number–3"><a href="#数字Number–3" class="headerlink" title="数字Number–3"></a>数字Number–3</h4><h4 id="对象Object–47"><a href="#对象Object–47" class="headerlink" title="对象Object–47"></a>对象Object–47</h4><h4 id="Seq–13"><a href="#Seq–13" class="headerlink" title="Seq–13"></a>Seq–13</h4><h4 id="字符串String-–30"><a href="#字符串String-–30" class="headerlink" title="字符串String –30"></a>字符串String –30</h4><h4 id="是用函数–34"><a href="#是用函数–34" class="headerlink" title="是用函数–34"></a>是用函数–34</h4><h4 id="Properties–7"><a href="#Properties–7" class="headerlink" title="Properties–7"></a>Properties–7</h4><h4 id="Methods–1"><a href="#Methods–1" class="headerlink" title="Methods–1"></a>Methods–1</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Lodash是一个一致性、模块化、高性能的JavaScript实用工具库。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="ES6" scheme="http://liugezhou.online/categories/ES6/"/>
    
    
      <category term="lodash" scheme="http://liugezhou.online/tags/lodash/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第四十三期</title>
    <link href="http://liugezhou.online/2020/07/12/issue-43/"/>
    <id>http://liugezhou.online/2020/07/12/issue-43/</id>
    <published>2020-07-12T07:50:00.000Z</published>
    <updated>2020-07-20T04:51:12.350Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周是2020年的第二十八个周末。<br>这里记录过去一周，我的一些总结。</p></blockquote><!-- 制作一张最能反映过去一周的周图片 --><p><img src="http://img.liugezhou.online/blog/weekly43.jpeg" alt="weekly-43"></p><a id="more"></a><h4 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h4><blockquote><p>距离上一个周总结过去了快要俩个月了。<br>这匆匆忙忙的两个月里，并没有干什么。</p></blockquote><h4 id="A股暴涨"><a href="#A股暴涨" class="headerlink" title="A股暴涨"></a>A股暴涨</h4><blockquote><p>之前炒过一段时间股票，亏了两千块左右后就不玩了。<br>今年年初，手里有一点点闲钱，然后就入市。<br>我是个一点经验都没有的新手，在疫情期间入市后的一。时间一至在亏，然而这两周A股暴涨(尤其是7月6号，周一的涨幅，上证大盘近六个点)，从入市算起，竟然小赚万把块，这种捡来的钱，除了运气好、投机之外，想不到别的原因。<br>由此可见这次A股暴涨带给人的心灵冲击。</p></blockquote><h4 id="百度网盘白嫖新姿势"><a href="#百度网盘白嫖新姿势" class="headerlink" title="百度网盘白嫖新姿势"></a><a href="https://mp.weixin.qq.com/s/kIExcmla99aBBLoKC6O3Ig" target="_blank" rel="noopener">百度网盘白嫖新姿势</a></h4><blockquote><p>👆 这篇文章介绍了一个名为<code>度云简易分享地址提取</code>的网站，整个页面非常简单，没有多余粉饰和图片，只有几段文字介绍了网站如何下载百度网盘内的资源.<br>该网站地址是：<a href="http://pan.naifei.cc/" target="_blank" rel="noopener">http://pan.naifei.cc/</a>   </p><p>我从网盘里下载了一套视频，差不多不到13G，下载了大约半个小时到四十分钟左右吧。<br>不限速很爽。</p></blockquote><h4 id="如何自己写一个包发布到npm"><a href="#如何自己写一个包发布到npm" class="headerlink" title="如何自己写一个包发布到npm"></a>如何自己写一个包发布到npm</h4><blockquote><p>之前不知道发布一个npm包竟是如此简单。<br>简单到：在写好自己的包项目后，在npm注册一个账号，npm login登录成功后，npm publish就可以直接发布到npm官网。</p></blockquote><h4 id="webpack4-0"><a href="#webpack4-0" class="headerlink" title="webpack4.0"></a>webpack4.0</h4><blockquote><p>前几天在某交流群中，看到一群友分享的一个资源：慕课网讲师dell的实战课：《从基础到实战，手把手教带你掌握webpack4.0》。<br>拿到资源地址后，通过上面推荐的百度网盘资源下载，对整个视频整体了看了一遍，收获不小。<br>webpack的配置甚多。<br>现在的Vue-cli3.0与create-react-app在项目构建都不在看见webpack的身影。<br>对于Vue来说，自己出了一套规则，通过vue.config.js去配置webpack(vue将webpack封装)。对React脚手架来说，如果想要自己配置webpack，需要通过npm run ejects这个命令释放代码，配置的规则还是webpack。</p></blockquote><h4 id="Dan-Abramov"><a href="#Dan-Abramov" class="headerlink" title="Dan Abramov"></a>Dan Abramov</h4><blockquote><p>Dan Abramov–Redux的作者，受2014年Facebook的Flux架构以及函数式编程语言Elm启发。很快，Redux因其简单易学体积小在短时间内成为最热门的前端架构。<br>TA正在撰写 JavaScript 教程，还没有写完。只要在上面网址报名，每写好一部分就会通过邮件发给你。网址：<a href="https://justjavascript.com/" target="_blank" rel="noopener">https://justjavascript.com/</a></p></blockquote><h4 id="End"><a href="#End" class="headerlink" title="End"></a>End</h4><blockquote><p>创业公司不要专注于创造产品，而要专注于解决问题。  </p><p>看到抽象的东西，应该尽量使它变得具体；看到具体的东西，应该尽量使它变得抽象。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本周是2020年的第二十八个周末。&lt;br&gt;这里记录过去一周，我的一些总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- 制作一张最能反映过去一周的周图片 --&gt;
&lt;p&gt;&lt;img src=&quot;http://img.liugezhou.online/blog/weekly43.jpeg&quot; alt=&quot;weekly-43&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Proxy与Reflect</title>
    <link href="http://liugezhou.online/2020/07/07/%E6%B7%B1%E5%85%A5%E4%B8%80%E4%B8%8B%E4%B8%8B%E8%BF%99%E4%B8%AAES6%E7%9A%84Proxy%E4%B8%8EReflect/"/>
    <id>http://liugezhou.online/2020/07/07/深入一下下这个ES6的Proxy与Reflect/</id>
    <published>2020-07-07T02:40:00.000Z</published>
    <updated>2020-07-07T03:22:22.555Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Proxy概述"><a href="#Proxy概述" class="headerlink" title="Proxy概述"></a>Proxy概述</h4><blockquote><p>说到Proxy这个东西，首先我们得对他有个定义，并且要对这个定义有个解释：<br>定义：Proxy用于修改某些操作的默认行为(等同于在语言层面做出修改，属于一种“元编程”，即对编程语言进行编程)。<br>解释：Proxy可以理解成，在目标对象之间架势一层“拦截”，外界对该对象的方法，都必须先通过这层拦截，因此提供一种机制，可以对外界的访问进行过滤和改写。<br>Proxy这个词的愿意是代理，用在这里表示由它来“代理”某些操作，可以译为“代理器”。</p></blockquote><a id="more"></a><blockquote><p>通过以上描述，我们最起码知道了Proxy这个东西就是一层过滤，担任拦截器的一种作用，然后我们写一段代码，来瞅瞅它的拦截-代理作用：  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var obj = new Proxy(&#123;&#125;,&#123;</span><br><span class="line">  set:function(target,propKey,value,receiver)&#123;</span><br><span class="line">    console.log(`setting $&#123;propKey&#125;!`)</span><br><span class="line">    return Reflect.set(target,propKey,value,receiver)</span><br><span class="line">  &#125;,</span><br><span class="line">  get:function(target,propKey,receiver)&#123;</span><br><span class="line">    console.log(`getting $&#123;propKey&#125;!`)</span><br><span class="line">    return Reflect.set(target,propKey,receiver)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">obj.name=&quot;liugezhou&quot; // setting name</span><br><span class="line">obj.name  // getting name</span><br></pre></td></tr></table></figure><blockquote><p>通过以上代码，我们在给对象obj赋值或者取值的时候，通过Proxy代理拦截修改默认行为，看到输出的日志，这便是Proxy的一个简单代码描述。   </p></blockquote><blockquote><p>对Proxy有了一个简单的认识后，通过代码，我们知道：ES6原生提供了Proxy构造函数，用来生成一个Proxy实例<br><code>var proxy = new Proxy(target,handler)</code>   </p><ul><li>生成一个Proxy实例使用： <code>new Proxy()</code>   </li><li><code>target</code>表示所要拦截的目标对象。  </li><li><code>handler</code>参数也是一个对象，用来控制拦截行为。   </li></ul></blockquote><blockquote><p>到这里，关于Proxy的知识点差不多就算完了，只是对于Proxy拦截来说，它肯定是有一些规则的，Proxy支持的拦截操作一共13个，关于这些拦截方法的详细介绍，本文就不做整理了。</p></blockquote><h4 id="Reflect概述"><a href="#Reflect概述" class="headerlink" title="Reflect概述"></a>Reflect概述</h4><blockquote><p> 前面我们知道了Proxy，这个Reflect与Proxy是一样的，也是ES6为了操作对象而提供的新的API。Reflect的设计目的是这样的：   </p><ul><li>Reflect对Object说：你的一些明显是属于语言内部的方法，比如Object.defineProperty()。你就放我身上吧，包括一些你的其他方法，咱俩先都部署着，等到将来有新方法的时候，就都放我身上，到那时直接从我的身去拿语言内部的方法吧。  </li><li>Reflect接着对Object说：你说你提供了一些方法，也不知道居安思危的优化一下，我要修改一些你原先的一些返回结果，让客户们更舒服一些。Object说我哪里让客户不舒服了，举个例子。R说：比如你有个Object.defineProperty(obj,name,desc)的招式，这一招当你无法定义一个属性的时候，你奶奶的就直接抛出一个错误，而我呢，通过我的Reflec.defineProperty()</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Proxy概述&quot;&gt;&lt;a href=&quot;#Proxy概述&quot; class=&quot;headerlink&quot; title=&quot;Proxy概述&quot;&gt;&lt;/a&gt;Proxy概述&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;说到Proxy这个东西，首先我们得对他有个定义，并且要对这个定义有个解释：&lt;br&gt;定义：Proxy用于修改某些操作的默认行为(等同于在语言层面做出修改，属于一种“元编程”，即对编程语言进行编程)。&lt;br&gt;解释：Proxy可以理解成，在目标对象之间架势一层“拦截”，外界对该对象的方法，都必须先通过这层拦截，因此提供一种机制，可以对外界的访问进行过滤和改写。&lt;br&gt;Proxy这个词的愿意是代理，用在这里表示由它来“代理”某些操作，可以译为“代理器”。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="ES6" scheme="http://liugezhou.online/categories/ES6/"/>
    
    
      <category term="Proxy" scheme="http://liugezhou.online/tags/Proxy/"/>
    
      <category term="Reflect" scheme="http://liugezhou.online/tags/Reflect/"/>
    
  </entry>
  
  <entry>
    <title>webpack4.0</title>
    <link href="http://liugezhou.online/2020/07/05/webpack4.0/"/>
    <id>http://liugezhou.online/2020/07/05/webpack4.0/</id>
    <published>2020-07-05T10:50:00.000Z</published>
    <updated>2020-07-12T14:36:54.031Z</updated>
    
    <content type="html"><![CDATA[<h4 id="初识webpack"><a href="#初识webpack" class="headerlink" title="初识webpack"></a>初识webpack</h4><blockquote><ul><li>webpack is a module bundler.    </li><li>webpack核心定义是一个模块打包工具。   </li><li>webpack module：ES Module、CommonJS、CMD、AMD </li></ul></blockquote><a id="more"></a><h4 id="搭建webpack环境"><a href="#搭建webpack环境" class="headerlink" title="搭建webpack环境"></a>搭建webpack环境</h4><blockquote><ul><li>webpack本质上是由node实现的。 </li><li>不推荐全局安装webpack   </li><li>查看所有的webpack历史版本：<code>npm view webpack versions</code>    </li><li>查看最新webpacxk版本：<code>npm view webpack version</code>  </li><li>本地项目安装完成后，查看webpack的版本：<code>npx  webpack -v</code>    </li><li>加入本地全局安装了webpack，想看webpack安装目录：<code>npm ls webpack -g</code> </li></ul></blockquote><h4 id="webpack的配置"><a href="#webpack的配置" class="headerlink" title="webpack的配置"></a>webpack的配置</h4><blockquote><ul><li>mode:production(代码压缩),development(代码未压缩)</li><li>entry:打包进入文件  </li><li>output: 打包输出路径  </li><li>以某文件为配置文件打包：npx webpack –config webpackconfig.js </li><li>loader是什么：打包方案(对于特定文件的打包处理:比如file-loader可以对图片、字体等静态资源文件进行打包) ,loader的执行顺序是由下往上，由左至右。   </li><li>module:一些loader规则（比如使用file-loader的时候，想让图片的打包名字不改变，可以在module的rules中配置use属性的options属性）   </li><li>plugins:  <blockquote><ul><li>html-webpack-plugin:会在打包结束后自动生成一个html文件，并把打包生成的js自动引入到这个html文件中。 </li><li>plugin可以在webpack运行到某个时刻的时候，帮你做一些事情   类似与vue中的生命周期函数。 </li><li>clean-webpack-plugin:打包生成dist目录下的覆盖(1.0版本可以正常打包，3.0报错)。</li></ul></blockquote></li></ul></blockquote><h4 id="sourceMap的配置"><a href="#sourceMap的配置" class="headerlink" title="sourceMap的配置"></a>sourceMap的配置</h4><blockquote><ul><li>项目打包后，如果关闭sourceMap的配置，在浏览器打开项目后，看到的js代码为打包后的代码，不利于查找代码错误。 </li><li>sourceMap是一个映射关系，他可以知道在dist打包后的main.js错误的代码对应在未经打包的代码的位置。  </li><li>配置项为：devtool:’source-map’—会在dist目录下生成一个.map的映射文件。如果为’inline-source-map’，则不会生成.map文件，直接在原main.js文见中添加注释以映射(位置在底部)。如果为’’cheap-inline-source-map’ :与inline不同，只告诉是哪行代码出错，效率会高一些。如果为”cheap-module-source-map’:不管是业务代码，但是依赖的第三方模块，都会显示出出错的地方。eval是打包效率最高的方式。如果是开发环境，建议使用“cheap-module-eval-source-map’这种方式。如果是开发环境，一般不用设置devtool的配置。如果要配置，推荐使用”cheap-module-source-map”。</li></ul></blockquote><h4 id="使用WebpackDevServer提升开发效率"><a href="#使用WebpackDevServer提升开发效率" class="headerlink" title="使用WebpackDevServer提升开发效率"></a>使用WebpackDevServer提升开发效率</h4><blockquote><p> 要实现的效果是修改了一个index.js文件中的代码，可以不用重新打包，直接去运行index.html的文件。要实现这种效果有三种方法： </p><ul><li><ol><li>在 package.json文件中给script命令加一个 –watch的参数。当加入watch参数后，会监听文件，如果源文件代码修改，会实时的更新打包。 </li></ol></li><li><ol start="2"><li>webpack-dev-server（webpack不自带，需要安装的）:第一次运行脚本的时候，自动打包、打开浏览器、热更新等功能。此外隐藏的一个功能是将dist打包保存至电脑内存。  </li></ol></li><li><ol start="3"><li>在node中直接使用webpack：通过expres与webpack-dev-middleware手写一个server.js。</li></ol></li></ul></blockquote><h4 id="HMR-hot-Module-Replacement-热模块替换"><a href="#HMR-hot-Module-Replacement-热模块替换" class="headerlink" title="[HMR] hot Module Replacement(热模块替换)"></a>[HMR] hot Module Replacement(热模块替换)</h4><blockquote><p>场景：js动作添加一些模块后，如果修改css文件，webpack会将之前的行为给删除，HMR就是解决只修改css在，不更改行为的。</p></blockquote><h4 id="使用Babel处理ES6语法"><a href="#使用Babel处理ES6语法" class="headerlink" title="使用Babel处理ES6语法"></a>使用Babel处理ES6语法</h4><blockquote><ul><li>安装第三方依赖：’babel-loader’、‘@babel/core’：babel-loader只是webpack与babel的一个沟通桥梁，并不会将ES6代码转化为ES5代码。 </li><li>继续安装@babel/preset-env，用于将ES6代码转为ES5代码。 </li><li>配置webpack.config.js。 </li><li>继续安装@babel/pollyfill(对低版本的一个完善)，使用的时候直接在全局引入即可:import ‘@babel/polyfill’,这样存在一个问题，打出的包非常的大，不爽，然后解决之：在webpack的配置文件中，这么配置：   </li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  test: /\.js$/, </span><br><span class="line">  exclude: /node_modules/, </span><br><span class="line">  loader: &apos;babel-loader&apos;,</span><br><span class="line">  options:&#123;</span><br><span class="line">    presets: [[&apos;@babel/preset-env&apos;,&#123;</span><br><span class="line">      useBuiltIns:&apos;usage&apos;</span><br><span class="line">    &#125;]]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Tree-Shaking"><a href="#Tree-Shaking" class="headerlink" title="Tree Shaking"></a>Tree Shaking</h4><blockquote><ul><li>Tree Shaking在webpack2.0之后引入。  </li><li>在math.js这个模块中有两个方法add 和minu，在index中只调用add方法，去打包的时候，会将math中的两个方法均打包，这样做是没有必要，且会使得打包文件变大，Tree Shaking就是为了解决这个问题的。     </li><li>Tree Shaking只支持ES Module(即import这种模块引入，require这种的不支持)。 </li></ul></blockquote><blockquote><p> mode为development环境：  </p><ul><li>默认没有Tree Shaking功能。配置的话需要在配置文件中添加 <code>optimization:{usedExports:true},</code> ，并且如果直接引入第三方资源，如果也不想做Tree Shaking，需要在package.json中配置（比如业务代码中使用了polyfill，添加： “sideEffects”:[“@babel/polyfill”],以忽略Tree Shaking对其作用）   </li><li>在我们math这个例子中，并未用到polyfill , 我们继续在package.json中配置： “sideEffects”:false   </li><li>这个时候我们用webpack打包，发现打包文件中，minu这个方法也被打包保留了下来，但是文件中有提示，告知我们只要add方法使用了。之所以有代码的保留是因为在开发环境下我们会调试代码，为了使得行行对应。  </li></ul></blockquote><blockquote><p>mode为production环境时：  </p><ul><li>Tree-Shaking才算真正生效。  </li><li>在production环境下，Tree-Shaking默认已经配置好了，在webpack的配置文件下不需要对<code>optimization</code>配置。     </li><li>但是仍然需要对package.json中的sideEffects进行配置。   </li><li>使用webpack打包会发现生成一个.map的映射文件，且打包文件被压缩，注释去掉、minu有关的代码也剔除掉了。    </li></ul></blockquote><h4 id="Development和Production模式的区分打包"><a href="#Development和Production模式的区分打包" class="headerlink" title="Development和Production模式的区分打包"></a>Development和Production模式的区分打包</h4><blockquote><p> 通过前面的学习，我们知道在开发环境与生产环境下，打包方式是有区别。<br> 为了提高在不同开发模式下进行打包的效率，我们分别新建两个文件:webpack.dev.js和webpack.prod.js。这两个文件分别代码不同环境下的webpack配置。<br>然后在package.json文件中的script标签页配置两个命令即可：<br>‘dev’:’webpack-dev-server –config webpack-dev.js’<br>‘build’:’webpack –config webpack.prod.js’    </p></blockquote><blockquote><p>到这里我们又发现一个问题，dev与prod的配置文件有特别多相同的代码，我们继续优化：<br>根目录下新建webpack.base.js,将dev与prod相同的代码摘出来放到base中去。<br>这个时候分别将dev/pro的文件与base文件进行合并输出配置：需要安装第三方模块：<code>webpack-merge</code> (此文默认安装的时候最新版本是5.0.8,使用merge报错，然后回退使用4.2.2版本)<br>最后分别在dev和prod中引入webpack-merge,通过<code>module.exports = merge(baseConfig, fileConfig)</code>即可。  </p></blockquote><h4 id="webpack和Code-Splitting-代码分割"><a href="#webpack和Code-Splitting-代码分割" class="headerlink" title="webpack和Code Splitting(代码分割)"></a>webpack和Code Splitting(代码分割)</h4><blockquote><p>代码分割与webpack无关。</p><ul><li>这里的代码分割是指对代码进行分割，提高代码执行效率与性能。    </li></ul></blockquote><blockquote><p>Demo:</p><ul><li>安装第三方包：lodash(提供了一些工具方法)。      </li><li>比如通过entry，将lodash打包成一个文件，业务代码打成一个文件。   </li></ul></blockquote><blockquote><p>webpack4可以自动的帮我们做代码分割：  </p><ul><li>第一种同步代码：在webpack.base.js中配置 optimization:{splitChunks:{chunks:’all’}},此时在开发环境下打包，会看到有一个新的打包文件：vendors~main.js.    </li><li>第二种异步代码：异步加载第三方资源(import异步引入)，无需做任何配置，webpack会自动帮我们进行代码的分割。</li></ul></blockquote><h4 id="Lazy-Loading懒加载，Chunk是什么？"><a href="#Lazy-Loading懒加载，Chunk是什么？" class="headerlink" title="Lazy Loading懒加载，Chunk是什么？"></a>Lazy Loading懒加载，Chunk是什么？</h4><blockquote><p>懒加载是通过import异步加载一个模块，在执行的时候，再去引入。<br>路由懒加载等提升页面加载效率。<br>业务代码引入第三方资源的懒加载可以通过async、await。    </p></blockquote><blockquote><p>chunk指的是整个项目完成打包后，dist下面有几个js文件就是指几个chunk。</p></blockquote><h4 id="CSS文件的代码分割"><a href="#CSS文件的代码分割" class="headerlink" title="CSS文件的代码分割"></a>CSS文件的代码分割</h4><blockquote><p>webpack配置文件中的output有两个属性：fileName和chunkFilename，这两个的区别是：  </p><p>CSS文件代码分割要使用在生产环境中。<br>需要安装<code>mini-css-extract-plugin</code>插件。<br>使用<code>optimize-css-assets-webpack-plugin</code>这个插件可以对代码进行合并和压缩。</p></blockquote><h4 id="shimming"><a href="#shimming" class="headerlink" title="shimming"></a>shimming</h4><blockquote><p>代码或者打包过程的兼容性问题。    </p><p>webpack自带一个webpack.procidePlugin({})插件–垫片。    </p><p>如果想让每一个js文件的this指向window，安装<code>imports-loader</code>。<br>对webpack.base.js做一些配置。</p></blockquote><h4 id="Library打包"><a href="#Library打包" class="headerlink" title="Library打包"></a>Library打包</h4><blockquote><p>自己发布一个npm包，在配置好自己的项目包之后，在npm官方注册账号，npm login登录，npm publish即可</p></blockquote><h4 id="Progessive-Web-Application-PWA"><a href="#Progessive-Web-Application-PWA" class="headerlink" title="Progessive Web Application - PWA"></a>Progessive Web Application - PWA</h4><blockquote><ul><li>安装第三方插件：workbox-webpack-plugin。   </li><li>线上打包配置文件：添加plugin：new WorkboxPlugin.GenerateSW()。   </li><li>在业务代码中，应该serverWorker，就可以将页面缓存住了。  </li></ul></blockquote><h4 id="TypaScript的打包配置"><a href="#TypaScript的打包配置" class="headerlink" title="TypaScript的打包配置"></a>TypaScript的打包配置</h4><blockquote><p> 总结至：<a href="https://github.com/liugezhou/typescript_webpack" target="_blank" rel="noopener">https://github.com/liugezhou/typescript_webpack</a></p></blockquote><h4 id="使用WebpackDevServer实现请求转发"><a href="#使用WebpackDevServer实现请求转发" class="headerlink" title="使用WebpackDevServer实现请求转发"></a>使用WebpackDevServer实现请求转发</h4><blockquote><p>本节主要是对webpack的配置devServer属性中的proxy做了一个讲解，没啥内容。</p></blockquote><h4 id="WebpackDevServer解决单页面应用路由问题"><a href="#WebpackDevServer解决单页面应用路由问题" class="headerlink" title="WebpackDevServer解决单页面应用路由问题"></a>WebpackDevServer解决单页面应用路由问题</h4><blockquote><p>devServer:historyApiFallback: true</p></blockquote><h4 id="Eslint在Webpack中的配置"><a href="#Eslint在Webpack中的配置" class="headerlink" title="Eslint在Webpack中的配置"></a>Eslint在Webpack中的配置</h4><blockquote><ul><li>npm i eslint -D   </li><li>npx eslint –init   </li><li>npm i babel-eslint -D</li></ul></blockquote><h4 id="提升Webpack打包速度的方法"><a href="#提升Webpack打包速度的方法" class="headerlink" title="提升Webpack打包速度的方法"></a>提升Webpack打包速度的方法</h4><blockquote><ol><li>跟上技术的迭代：Npde、Npm、Yarn  </li><li>在尽可能少的模块上应用Loader (合理使用exclude和include)    </li><li>Plugin尽可能精简少用并确保可靠</li><li>resolve参数合理配置(如果想引入默认为js或者jsx的文件，在webpack配置文件中加<code>resolve:{extensions:[&#39;.js&#39;,&#39;jsx&#39;]}</code>)</li></ol></blockquote><h4 id="如何编写一个loader"><a href="#如何编写一个loader" class="headerlink" title="如何编写一个loader"></a>如何编写一个loader</h4><blockquote><p>借助loader处理引用的文件。<br><a href="https://github.com/liugezhou/make-loader" target="_blank" rel="noopener">demo仓库源码</a></p></blockquote><h4 id="如何编写一个Plugin"><a href="#如何编写一个Plugin" class="headerlink" title="如何编写一个Plugin"></a>如何编写一个Plugin</h4><blockquote><p>在打包的某个具体时刻做的操作(比如打包钱清空dist目录，打包完成的html自动生成等)<br><a href="https://github.com/liugezhou/make-plugin" target="_blank" rel="noopener">demo仓库源码</a></p></blockquote><h4 id="Bundler源码编写-模块分析"><a href="#Bundler源码编写-模块分析" class="headerlink" title="Bundler源码编写(模块分析)"></a>Bundler源码编写(模块分析)</h4><blockquote><p><a href="https://github.com/liugezhou/make-bundle" target="_blank" rel="noopener">demo仓库源码</a></p></blockquote><h4 id="通过CreateReactApp深入学习Webpack配置"><a href="#通过CreateReactApp深入学习Webpack配置" class="headerlink" title="通过CreateReactApp深入学习Webpack配置"></a>通过CreateReactApp深入学习Webpack配置</h4><h4 id="通过VueCli3学习webpack配置"><a href="#通过VueCli3学习webpack配置" class="headerlink" title="通过VueCli3学习webpack配置"></a>通过VueCli3学习webpack配置</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;初识webpack&quot;&gt;&lt;a href=&quot;#初识webpack&quot; class=&quot;headerlink&quot; title=&quot;初识webpack&quot;&gt;&lt;/a&gt;初识webpack&lt;/h4&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;webpack is a module bundler.    &lt;/li&gt;
&lt;li&gt;webpack核心定义是一个模块打包工具。   &lt;/li&gt;
&lt;li&gt;webpack module：ES Module、CommonJS、CMD、AMD &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="webpack" scheme="http://liugezhou.online/categories/webpack/"/>
    
    
      <category term="webpack" scheme="http://liugezhou.online/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>长链接转短链接方法实践</title>
    <link href="http://liugezhou.online/2020/05/27/%E9%95%BF%E9%93%BE%E6%8E%A5%E8%BD%AC%E7%9F%AD%E9%93%BE%E6%8E%A5/"/>
    <id>http://liugezhou.online/2020/05/27/长链接转短链接/</id>
    <published>2020-05-27T09:00:00.000Z</published>
    <updated>2020-05-27T09:49:55.540Z</updated>
    
    <content type="html"><![CDATA[<h5 id="我们在项目开发中，会遇到长链接转短链接的一个需求。"><a href="#我们在项目开发中，会遇到长链接转短链接的一个需求。" class="headerlink" title="我们在项目开发中，会遇到长链接转短链接的一个需求。"></a>我们在项目开发中，会遇到长链接转短链接的一个需求。</h5><h5 id="单从我在开发中遇到的场景，是这样的：某个项目的详情页，要通过页面url生成二维码。而这个项目地址的url很长，所以会导致生成的二维码非常的密密麻麻，然后会造成不容易识别，于是就有了将长链接地址转为短链接地址，然后生成二维码的需求。"><a href="#单从我在开发中遇到的场景，是这样的：某个项目的详情页，要通过页面url生成二维码。而这个项目地址的url很长，所以会导致生成的二维码非常的密密麻麻，然后会造成不容易识别，于是就有了将长链接地址转为短链接地址，然后生成二维码的需求。" class="headerlink" title="单从我在开发中遇到的场景，是这样的：某个项目的详情页，要通过页面url生成二维码。而这个项目地址的url很长，所以会导致生成的二维码非常的密密麻麻，然后会造成不容易识别，于是就有了将长链接地址转为短链接地址，然后生成二维码的需求。"></a>单从我在开发中遇到的场景，是这样的：某个项目的详情页，要通过页面url生成二维码。而这个项目地址的url很长，所以会导致生成的二维码非常的密密麻麻，然后会造成不容易识别，于是就有了将长链接地址转为短链接地址，然后生成二维码的需求。</h5><h5 id="除此之外，拼多多分享被微信封掉后-我们也时不时微信群里面看到地址有长这个样子的分享：https-w-url-cn-s-xxxxxxx。这个地址是微信api给出的长链接转短链接接口。"><a href="#除此之外，拼多多分享被微信封掉后-我们也时不时微信群里面看到地址有长这个样子的分享：https-w-url-cn-s-xxxxxxx。这个地址是微信api给出的长链接转短链接接口。" class="headerlink" title="除此之外，拼多多分享被微信封掉后,我们也时不时微信群里面看到地址有长这个样子的分享：https://w.url.cn/s/xxxxxxx。这个地址是微信api给出的长链接转短链接接口。"></a>除此之外，拼多多分享被微信封掉后,我们也时不时微信群里面看到地址有长这个样子的分享：<a href="https://w.url.cn/s/xxxxxxx。这个地址是微信api给出的长链接转短链接接口。" target="_blank" rel="noopener">https://w.url.cn/s/xxxxxxx。这个地址是微信api给出的长链接转短链接接口。</a></h5><h5 id="这篇文章就记录长链接转短链接的一些小小所学。"><a href="#这篇文章就记录长链接转短链接的一些小小所学。" class="headerlink" title="这篇文章就记录长链接转短链接的一些小小所学。"></a>这篇文章就记录长链接转短链接的一些小小所学。</h5><a id="more"></a><h4 id="微信长链接转短链接接口"><a href="#微信长链接转短链接接口" class="headerlink" title="微信长链接转短链接接口"></a>微信长链接转短链接接口</h4><blockquote><p>微信公众号官方文档提供了一个长链接转短链接的接口:<a href="https://developers.weixin.qq.com/doc/offiaccount/Account_Management/URL_Shortener.html" target="_blank" rel="noopener">官方地址</a>；<br>根据官方文档：<br>主要使用场景为开发者用于生成二维码的原链接（商品、支付二维码等）太长导致扫码速度和成功率下降，将原长链接通过此接口转成短链接再生成二维码将大大提升扫码速度和成功率。该接口请求参数为三个：access_token、action、long_url，请求方式为POST。通过接口生成的短链接样式为：<a href="https://w.url.cn/s/xxxxxxx。" target="_blank" rel="noopener">https://w.url.cn/s/xxxxxxx。</a>  </p><p>该生成接口的方式非常之简单，只是此链接只能在腾讯系应用打开。如若在支付宝中会提示打不开。<br>代码实现如下：  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">@Slf4j</span><br><span class="line">public class WechatToolImpl extends BaseApiService implements IWechatToolApi &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    private WechatApiImpl wechatapi;</span><br><span class="line">    @Override</span><br><span class="line">    public String longUrlToShort(String longUrl) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            longUrl= URLDecoder.decode( longUrl, &quot;UTF-8&quot; );</span><br><span class="line"></span><br><span class="line">        &#125; catch (UnsupportedEncodingException e) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        //要先去redis获取之前存储的 access_token</span><br><span class="line">        BaseResponse&lt;AccessTokenOutputDTO&gt; tokenDTO = wechatapi.getpublictoken();</span><br><span class="line">        AccessTokenOutputDTO token = tokenDTO.getData();</span><br><span class="line">        String access_token = token.getAccessToken();</span><br><span class="line">        JSONObject jsobj1 = new JSONObject();</span><br><span class="line">        jsobj1.put(&quot;action&quot;, &quot;long2short&quot;);</span><br><span class="line">        jsobj1.put(&quot;long_url&quot;, longUrl);</span><br><span class="line">        String result = post(jsobj1, &quot;https://api.weixin.qq.com/cgi-bin/shorturl?access_token=&quot; + access_token);</span><br><span class="line">        String short_url = &quot;&quot;;</span><br><span class="line">        Map maps = (Map) JSON.parse(result);</span><br><span class="line">        if (maps.containsKey(&quot;short_url&quot;)) &#123;</span><br><span class="line">            short_url = maps.get(&quot;short_url&quot;).toString();</span><br><span class="line">        &#125;</span><br><span class="line">        return short_url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static String post(JSONObject json, String URL) &#123;</span><br><span class="line"></span><br><span class="line">        HttpClient client = new DefaultHttpClient();</span><br><span class="line">        HttpPost post = new HttpPost(URL);</span><br><span class="line"></span><br><span class="line">        post.setHeader(&quot;Content-Type&quot;, &quot;application/json&quot;);</span><br><span class="line">        post.addHeader(&quot;Authorization&quot;, &quot;Basic YWRtaW46&quot;);</span><br><span class="line">        String result = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line"></span><br><span class="line">            StringEntity s = new StringEntity(json.toString(), &quot;utf-8&quot;);</span><br><span class="line">            s.setContentEncoding(new BasicHeader(HTTP.CONTENT_TYPE,</span><br><span class="line">                    &quot;application/json&quot;));</span><br><span class="line">            post.setEntity(s);</span><br><span class="line"></span><br><span class="line">            // 发送请求</span><br><span class="line">            HttpResponse httpResponse = client.execute(post);</span><br><span class="line"></span><br><span class="line">            // 获取响应输入流</span><br><span class="line">            InputStream inStream = httpResponse.getEntity().getContent();</span><br><span class="line">            BufferedReader reader = new BufferedReader(new InputStreamReader(</span><br><span class="line">                    inStream, &quot;utf-8&quot;));</span><br><span class="line">            StringBuilder strber = new StringBuilder();</span><br><span class="line">            String line = null;</span><br><span class="line">            while ((line = reader.readLine()) != null) &#123;</span><br><span class="line">                strber.append(line + &quot;\n&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            inStream.close();</span><br><span class="line"></span><br><span class="line">            result = strber.toString();</span><br><span class="line"></span><br><span class="line">            if (httpResponse.getStatusLine().getStatusCode() == 200) &#123;</span><br><span class="line"></span><br><span class="line">                log.info(&quot;请求服务器成功，做相应处理&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125; else &#123;</span><br><span class="line"></span><br><span class="line">                log.info(&quot;请求服务端失败&quot;);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        log.info(result);</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>上述代码未写从微信接口获取access_token的方法实现。</p></blockquote><h4 id="自己实现思路总结"><a href="#自己实现思路总结" class="headerlink" title="自己实现思路总结"></a>自己实现思路总结</h4><blockquote><p>只从表象来看，长链接转短链接，肯定是有映射关系的。比如从微信获取一个短链接地址，微信服务器上肯定有一个相对应的地方去存这个长链接。这么来看，我们不妨自己实现一个长链接转短链接的功能(简版)。<br>首先：数据库中建一个表，用来存在主键ID以及长链接地址。<br>然后：拿到一个长链接后，通过主键ID存放长链接地址，返回一个短链接地址，先假如返回的短链接地址是：<a href="https://liugezhou/go/skr/u=1" target="_blank" rel="noopener">https://liugezhou/go/skr/u=1</a> (1为新建表的主键ID)。<br>最后：在我们的服务liugezhou上实现一个接口 <code>s</code>，采用get请求方式，传递一个参数u，然后在此接口中通过传递过来的u参数与表中查找长链接地址，然后直接重定向。<br>代码实现比较简单，由于这只是一个设想，并未去实现<code>通过主键ID存放长链接地址</code>的代码开发，只是在各个平台测试了下简单访问：  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">@Api(tags = &quot;通用服务接口&quot;, description = &quot;重定向&quot;)</span><br><span class="line">@RequestMapping(&quot;/go&quot;)</span><br><span class="line">public interface ICommonApi &#123;</span><br><span class="line"></span><br><span class="line">        @ApiOperation(value = &quot;扫码进入&quot;,notes = &quot;应用环境：PUBLIC&quot;)</span><br><span class="line">        @GetMapping(&quot;/skr&quot;)</span><br><span class="line">        void skr(@ApiParam(value = &quot;二维码对应主键id&quot;, required = true)</span><br><span class="line">        @RequestParam(value = &quot;u&quot;) String u) throws IOException;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Slf4j</span><br><span class="line">@RestController</span><br><span class="line">public class CommonApiImpl extends BaseApiService implements ICommonApi &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    private QService qService;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private HttpServletRequest request;</span><br><span class="line">    @Autowired</span><br><span class="line">    private HttpServletResponse response;</span><br><span class="line"></span><br><span class="line">   @Override</span><br><span class="line">    public void skr(String u) throws IOException &#123;</span><br><span class="line">        String url = qService.selectQrUrl(u);</span><br><span class="line">        response.sendRedirect(url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="各种第三方"><a href="#各种第三方" class="headerlink" title="各种第三方"></a>各种第三方</h4><blockquote><p>第三方的实现就比较多了，比如百度短网址。<br>百度短网址服务现在只针对企业开发，个人没有权限，而通过企业账号登录后，调试其接口，可能会出现：”content long url not safe”的错误。<br>提工单，将自己的长链接地址示例审核一下，大约半个到一个小时就ok了。<br>第三方相对来说稳定一些，也不用维护什么，就是得稍微花一点点的钱。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;我们在项目开发中，会遇到长链接转短链接的一个需求。&quot;&gt;&lt;a href=&quot;#我们在项目开发中，会遇到长链接转短链接的一个需求。&quot; class=&quot;headerlink&quot; title=&quot;我们在项目开发中，会遇到长链接转短链接的一个需求。&quot;&gt;&lt;/a&gt;我们在项目开发中，会遇到长链接转短链接的一个需求。&lt;/h5&gt;&lt;h5 id=&quot;单从我在开发中遇到的场景，是这样的：某个项目的详情页，要通过页面url生成二维码。而这个项目地址的url很长，所以会导致生成的二维码非常的密密麻麻，然后会造成不容易识别，于是就有了将长链接地址转为短链接地址，然后生成二维码的需求。&quot;&gt;&lt;a href=&quot;#单从我在开发中遇到的场景，是这样的：某个项目的详情页，要通过页面url生成二维码。而这个项目地址的url很长，所以会导致生成的二维码非常的密密麻麻，然后会造成不容易识别，于是就有了将长链接地址转为短链接地址，然后生成二维码的需求。&quot; class=&quot;headerlink&quot; title=&quot;单从我在开发中遇到的场景，是这样的：某个项目的详情页，要通过页面url生成二维码。而这个项目地址的url很长，所以会导致生成的二维码非常的密密麻麻，然后会造成不容易识别，于是就有了将长链接地址转为短链接地址，然后生成二维码的需求。&quot;&gt;&lt;/a&gt;单从我在开发中遇到的场景，是这样的：某个项目的详情页，要通过页面url生成二维码。而这个项目地址的url很长，所以会导致生成的二维码非常的密密麻麻，然后会造成不容易识别，于是就有了将长链接地址转为短链接地址，然后生成二维码的需求。&lt;/h5&gt;&lt;h5 id=&quot;除此之外，拼多多分享被微信封掉后-我们也时不时微信群里面看到地址有长这个样子的分享：https-w-url-cn-s-xxxxxxx。这个地址是微信api给出的长链接转短链接接口。&quot;&gt;&lt;a href=&quot;#除此之外，拼多多分享被微信封掉后-我们也时不时微信群里面看到地址有长这个样子的分享：https-w-url-cn-s-xxxxxxx。这个地址是微信api给出的长链接转短链接接口。&quot; class=&quot;headerlink&quot; title=&quot;除此之外，拼多多分享被微信封掉后,我们也时不时微信群里面看到地址有长这个样子的分享：https://w.url.cn/s/xxxxxxx。这个地址是微信api给出的长链接转短链接接口。&quot;&gt;&lt;/a&gt;除此之外，拼多多分享被微信封掉后,我们也时不时微信群里面看到地址有长这个样子的分享：&lt;a href=&quot;https://w.url.cn/s/xxxxxxx。这个地址是微信api给出的长链接转短链接接口。&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://w.url.cn/s/xxxxxxx。这个地址是微信api给出的长链接转短链接接口。&lt;/a&gt;&lt;/h5&gt;&lt;h5 id=&quot;这篇文章就记录长链接转短链接的一些小小所学。&quot;&gt;&lt;a href=&quot;#这篇文章就记录长链接转短链接的一些小小所学。&quot; class=&quot;headerlink&quot; title=&quot;这篇文章就记录长链接转短链接的一些小小所学。&quot;&gt;&lt;/a&gt;这篇文章就记录长链接转短链接的一些小小所学。&lt;/h5&gt;
    
    </summary>
    
      <category term="服务端" scheme="http://liugezhou.online/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    
      <category term="长链接" scheme="http://liugezhou.online/tags/%E9%95%BF%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第四十二期</title>
    <link href="http://liugezhou.online/2020/05/25/issue-42/"/>
    <id>http://liugezhou.online/2020/05/25/issue-42/</id>
    <published>2020-05-25T12:13:00.000Z</published>
    <updated>2020-05-25T12:15:28.225Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>上周是2020年的第二十一个周末。(今天周一)<br>这里记录过去一周，我的一些总结。</p></blockquote><!-- 制作一张最能反映过去一周的周图片 --><p><img src="http://img.liugezhou.online/blog/weekly42.png" alt="weekly-42"></p><a id="more"></a><!-- 一周最大感受 --><h4 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h4><blockquote><p>好吧，继续拖更。<br>虽然此号无人问津，但是我却心有不甘。</p></blockquote><h4 id="爱love佑"><a href="#爱love佑" class="headerlink" title="爱love佑"></a>爱love佑</h4><blockquote><p>爱love佑小程序，爱佑慈善基金会官方小程序。<br>如果世界让你感到冷漠，如果生活让你疲惫不堪，如果爱心让你无处释放。<br>打开小程序，为远方还在忍受病痛折磨的孩子献上一份爱心吧。</p></blockquote><h4 id="KTFSR"><a href="#KTFSR" class="headerlink" title="KTFSR"></a>KTFSR</h4><blockquote><p>发送KTFSR到10086，可以开通骚扰电话拦截功能，不用额外下载软件。</p></blockquote><h4 id="楼盘真正销售情况"><a href="#楼盘真正销售情况" class="headerlink" title="楼盘真正销售情况"></a><a href="https://mp.weixin.qq.com/s/4rtdQ5gU6w0xY2lqSMEbWg" target="_blank" rel="noopener">楼盘真正销售情况</a></h4><blockquote><p>👆 这篇文章，通过分析武汉楼盘情况，告诉大家：<code>所有楼盘的销售情况都是在政府网站上全部公开的</code>。<br>作者在留言区：<code>所有城市楼盘销售情况都有的，国家规定必须公开，位置不同而已</code>。<br>然而我花了些时间找了一找，还是没有找到。  </p></blockquote><h4 id="One-Switch"><a href="#One-Switch" class="headerlink" title="One Switch"></a>One Switch</h4><blockquote><p>一款Mac桌面软件， 可以快速设置隐藏桌面、黑暗模式、保持亮屏、屏幕保护、清理屏幕等小工具。  </p><p>Mac上一些软件在安装时，会显示不能打开的提示，就像这块小工具软件，这个时候只要打开终端输入以下命令，就会开启Mac的安装设置：允许任何来源。<br><code>sudo spctl --master-disable</code></p></blockquote><h4 id="小技巧：Mac系统调整Launchpad图标大小"><a href="#小技巧：Mac系统调整Launchpad图标大小" class="headerlink" title="小技巧：Mac系统调整Launchpad图标大小"></a><a href="https://www.jianshu.com/p/60315dfcda53" target="_blank" rel="noopener">小技巧：Mac系统调整Launchpad图标大小</a></h4><blockquote><p>👆 Mac的启动台页面默认显示的图标比较大，而在我们使用一段时间后，会安装很多软件，图标看着着实不舒服。<br>在设置中找不到图标大小的设置，这个时候需要在终端中，执行如下命令：  </p><p>1、调整每一列显示图标数量，7 表示每一列显示7个<br> <code>defaults write com.apple.dock springboard-rows -int 7</code>  </p><p>2、调整每一行显示图标数量，这里我用的是8<br><code>defaults write com.apple.dock springboard-columns -int 8</code>  </p><p>3、由于修改了每一页显示图标数量，可能需要重置Launchpad<br><code>defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</code></p></blockquote><h4 id="柠檬清理"><a href="#柠檬清理" class="headerlink" title="柠檬清理"></a><a href="https://lemon.qq.com/" target="_blank" rel="noopener">柠檬清理</a></h4><blockquote><p>一款Mac清理工具。</p></blockquote><h4 id="traditional"><a href="#traditional" class="headerlink" title="traditional"></a>traditional</h4><blockquote><p> jquery框架的ajax参数：<code>traditional</code>,其默认值是false。<br>而在请求接口如果需要传递一个参数为数组时，可以添加<code>traditionla:true</code>这一设置。</p></blockquote><h4 id="JustAuth"><a href="#JustAuth" class="headerlink" title="JustAuth"></a><a href="https://github.com/justauth/JustAuth" target="_blank" rel="noopener">JustAuth</a></h4><blockquote><p>👆 史上最全的整合第三方登录的开源库。目前已支持Github、Gitee、微博、钉钉、百度、Coding、腾讯云开发者平台、OSChina、支付宝、QQ、微信、淘宝、Google、Facebook、抖音、领英、小米、微软、今日头条、Teambition、StackOverflow、Pinterest、人人、华为、企业微信、酷家乐、Gitlab、美团、饿了么和推特等第三方平台的授权登录。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;上周是2020年的第二十一个周末。(今天周一)&lt;br&gt;这里记录过去一周，我的一些总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- 制作一张最能反映过去一周的周图片 --&gt;
&lt;p&gt;&lt;img src=&quot;http://img.liugezhou.online/blog/weekly42.png&quot; alt=&quot;weekly-42&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第四十一期</title>
    <link href="http://liugezhou.online/2020/05/12/issue-41/"/>
    <id>http://liugezhou.online/2020/05/12/issue-41/</id>
    <published>2020-05-12T12:00:00.000Z</published>
    <updated>2020-05-12T13:24:48.039Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周是2020年的第十九个周末。<br>这里记录过去一周，我的一些总结。</p></blockquote><a id="more"></a><!-- 一周最大感受 --><h4 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h4><blockquote><p>这两周的周总结是干不下去了，上周的文章又拖到了今日[本周二]。 </p><p>眨眼之间，周总结写了四十周，差不多就是十个月，这家伙真要这么断了，也怪可惜的。<br>比较没有总结的欲望，是因为周总结带给我的是一次不如一次的体验。<br>为了让我欣慰的感觉到每周还在做点东西、而明显开始应付差事。  </p><p>记录下最近比较糟心的事–关于工作方面的：<br>在手的两个项目，其中一个由于跨部门合作，主要是为前端提供后端接口；<br>另一个比较舒心但总是中断的项目是：前后端分离但需共同兼顾的新项目。  </p><p>第一个项目基本接口服务已经完成，由于接手离职人员的代码，外加我对后端代码不是很待见，于是调试的一个个bug扰乱了我弱小的心灵。<br>第二个项目由于第一个项目的时刻扰乱，从来也不顺畅。<br>不仅如此，我也深感调试的这些bug对自我技术的提升不会有什么帮助，于是时刻提醒自己保持平常心。<br>这就是工作，一个职工在公司的首页任务：解决问题为先。 </p></blockquote><h4 id="教育部"><a href="#教育部" class="headerlink" title="教育部"></a>教育部</h4><blockquote><p>教育部消息，今年将招收40多万毕业生补充中小学和幼儿园教师队伍，并采取“先上岗、再考证”的举措。</p></blockquote><h4 id="未获用户同意投放快递柜属违法"><a href="#未获用户同意投放快递柜属违法" class="headerlink" title="未获用户同意投放快递柜属违法"></a>未获用户同意投放快递柜属违法</h4><blockquote><p>江苏省邮政管理局统计，省内15%的快递采取了快递柜方式投递。邮政管理部门表示，快递员未征得用户同意就投到快递柜属违法行为，用户可投诉快递企业。若企业不改正，可拨打025-12305申诉。</p></blockquote><h4 id="求助电话"><a href="#求助电话" class="headerlink" title="求助电话"></a>求助电话</h4><blockquote><p>抖音上看到的一个视频，法律相关的救助电话：<br>12348:法律援助。<br>12333:拖欠工资。<br>12309:举报村霸。</p></blockquote><h4 id="后浪"><a href="#后浪" class="headerlink" title="后浪"></a>后浪</h4><blockquote><p>B站后浪视频的爆火，引起一批90后00后的强烈方案与吐槽。有人写道：《后浪》是一次成功的事件营销，但也给B站敲响了警钟。<br>虽然不止于此，但还是忍不住网络思考者们的一堆吐槽。  </p><p>程序猿版<a href="https://mp.weixin.qq.com/s/8mMV-6ggKS-ES7M4x-h4Jg" target="_blank" rel="noopener">《溢出吧，后浪》</a></p></blockquote><h4 id="端到端加密"><a href="#端到端加密" class="headerlink" title="端到端加密"></a>端到端加密</h4><blockquote><p>我总结了一下,目前支持端对端加密的通信软件，欢迎补充。  </p><ul><li>Signal  </li><li>WhatsApp   </li><li>Wire  </li><li>Matrix  </li><li>Riot  </li><li>Line  </li><li>Keybase<br>根据我查到的资料，Telegram 默认不开启端对端加密，仅在使用一对一的“秘密聊天”功能时提供。<br>所以，Telegram 的群聊是不加密的<br><cite>–from  阮一峰的Twitter</cite><br>国内受政策影响，应该没有较为[流行]的端对端加密通信软件。<br>所谓端到端加密通讯软件，简单来说就是：<br>任何使用端到端加密（E2EE）的软件都可以保证只有您和收件人才能看到发送的内容。没有人可以拦截您正在传输的消息并阅读它们。<br><a href="https://www.cyclonis.com/zh-hans/what-is-end-to-end-encryption/" target="_blank" rel="noopener">什么是端到端加密</a></li></ul></blockquote><h4 id="Free-Mybatis-Plugin"><a href="#Free-Mybatis-Plugin" class="headerlink" title="Free Mybatis Plugin"></a>Free Mybatis Plugin</h4><blockquote><p>IDE插件：跳转到mapper以及从mapper文件中跳回,主要作用：  </p><ul><li>生成mapper xml文件  </li><li>快速从代码跳转到mapper及从mapper返回代码  </li><li>mybatis自动补全及语法错误提示 </li><li>集成mybatis generator gui界面</li></ul></blockquote><h4 id="END"><a href="#END" class="headerlink" title="END"></a>END</h4><blockquote><p>Okay.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本周是2020年的第十九个周末。&lt;br&gt;这里记录过去一周，我的一些总结。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第四十期</title>
    <link href="http://liugezhou.online/2020/05/05/issue-40/"/>
    <id>http://liugezhou.online/2020/05/05/issue-40/</id>
    <published>2020-05-05T09:40:00.000Z</published>
    <updated>2020-05-05T09:41:03.042Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周是2020年的第十八个周末。<br>这里记录过去一周，我的一些总结。</p></blockquote><!-- 制作一张最能反映过去一周的周图片 --><p><img src="http://img.liugezhou.online/blog/weekly40.jpg" alt="weekly-40"></p><a id="more"></a><!-- 一周最大感受 --><h4 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h4><blockquote><p>上周由于加班与项目烦心事较多，停更了一周。<br>当然，也是由于没有什么值得记录的素材与总结的心得。<br>虽然尽量保证每周周报不糊弄自己，可时间久了免不了心生疲惫与退意。每每想到虽然每周的总结做的不是很好，但至少还在坚持学习、坚持尝试关注一些东西，还是觉得有一些的收获。<br>祝大家五一中长假欢乐。</p><p>这篇文章开始写的时候是五月一号，而到如今发出五一过去了。</p></blockquote><h4 id="一句话新规"><a href="#一句话新规" class="headerlink" title="一句话新规"></a>一句话新规</h4><blockquote><p>最高人民法院正式规定，电子数据充当民事诉讼证据具有完全效力，从2020年5月1日开始实施。网页、博客、微博、短信、电子邮件、即时通信、用户注册信息、电子交易记录、登录日志等，都是有效证据。</p></blockquote><h4 id="负油价"><a href="#负油价" class="headerlink" title="负油价"></a>负油价</h4><blockquote><p>看到一个段子：<br>一月武汉加油，二月中国加油，三月世界加油，四月油加多了～<br>上周【暴跌300% 美油期货每桶-37美元】又一次让众人见证历史，中国银行原油宝客户抄底失败倒欠银行钱的事引起轩然大波。</p></blockquote><h4 id="丰巢快递柜与刷脸识别技术"><a href="#丰巢快递柜与刷脸识别技术" class="headerlink" title="丰巢快递柜与刷脸识别技术"></a>丰巢快递柜与刷脸识别技术</h4><blockquote><p>4月30日，丰巢快递柜开始进入收费时代，超12小时每半天收费0.5元，3元封顶。<br>一名公号大V针对此次进行了审核剖析：<a href="https://mp.weixin.qq.com/s/kqy0qC2i7VP2BHQXxNYnSQ" target="_blank" rel="noopener">《我的快递，什么时候能送货上门？》</a>.   </p><p>和这样事件大同小异的刷脸识别技术也被各公司应用的淋漓极致，比如北京银行新版的《北京银行电子银行转账服务条款》。<br>在进行转账时，北京银行提示：为确保您本人办理，我行将采集您的人像信息安全验证，并将切实保护您的信息安全，您是否同意？<br>如果你不同意你就得使用U盾，然后你U盾大概率是不知道早扔哪了，你还是必须使用人脸验证，否则你就没有进行转账的权利。  </p><p>与快递一样，人脸识别技术也在慢慢不断刷新人民的忍耐力，直到完全推行起来。<br>因不愿意“刷脸进门”，购买了动物园年卡的浙江理工大学副教授郭兵将杭州野生动物世界告上了法庭。<br>被称为国内“人脸识别第一案”刚刚过去半年，然并卵，栾冰然。</p></blockquote><h4 id="中国互联网往事"><a href="#中国互联网往事" class="headerlink" title="中国互联网往事"></a><a href="https://mp.weixin.qq.com/s/EhrdF4BvPzlqx3C_vvH5zA" target="_blank" rel="noopener">中国互联网往事</a></h4><blockquote><p>👆一篇长长的漫画，简要回顾中国互联网往事。</p></blockquote><h4 id="如何改进-NGINX-配置文件节省带宽？"><a href="#如何改进-NGINX-配置文件节省带宽？" class="headerlink" title="如何改进 NGINX 配置文件节省带宽？"></a><a href="https://www.nginx.com/blog/help-the-world-by-healing-your-nginx-configuration/" target="_blank" rel="noopener">如何改进 NGINX 配置文件节省带宽？</a></h4><blockquote><p>👆从阮老师博客看到的推荐：<a href="https://www.nginx.com/blog/help-the-world-by-healing-your-nginx-configuration/" target="_blank" rel="noopener">NGINX 官方的博客文章</a>，教大家五个小技巧，通过改进配置来节省带宽、提高性能。<br>对开发者来说对nginx的掌握非常必要，下周将这篇文章的翻译提上日程。</p></blockquote><h4 id="Gossip"><a href="#Gossip" class="headerlink" title="Gossip"></a><a href="https://pearmini.gitee.io/gossip/" target="_blank" rel="noopener">Gossip</a></h4><blockquote><p>一个制作幻灯片的在线工具，只需要少量拖拽和对齐操作，就可以生成通过浏览器播放的幻灯片。<br><cite>来自–阮一峰的网络日志</cite></p></blockquote><h4 id="VSCode插件"><a href="#VSCode插件" class="headerlink" title="VSCode插件"></a>VSCode插件</h4><blockquote><p>Polacode:用来生成代码截图。<br>better-comments:注释高亮。</p></blockquote><h4 id="Mac下安装redis"><a href="#Mac下安装redis" class="headerlink" title="Mac下安装redis"></a><a href="https://zhuanlan.zhihu.com/p/35945728" target="_blank" rel="noopener">Mac下安装redis</a></h4><blockquote><p>👆Mac下安装redis简易教程。  </p><ul><li>下载并安装 reids  </li><li>编译测试: sudo make test  </li><li>编译安装: sudo make install   </li><li>启动redis: redis-server </li><li>查看redis进程：ps -ef | grep redis  </li><li>在redis目录下建立bin，etc，db三个目录、配置(略) </li></ul></blockquote><h4 id="终极Shell"><a href="#终极Shell" class="headerlink" title="终极Shell"></a><a href="https://xie.infoq.cn/article/da5db7e0e60a4fb1529a5ba51" target="_blank" rel="noopener">终极Shell</a></h4><blockquote><p>👆池坚强，池老师的一篇总结【oh my zsh】项目的配置文章。<br>【oh my zsh】是国外一个程序员开发的让你快速上手zsh的项目。<br>我由于zsh或者bash的很大命令还不是很融会贯通，加上对shell的学习没有那么强烈，所以暂没有进行安装使用，这里做一个记录与了解。</p></blockquote><h4 id="panolens-js"><a href="#panolens-js" class="headerlink" title="panolens.js"></a><a href="https://pchen66.github.io/Panolens/" target="_blank" rel="noopener">panolens.js</a></h4><blockquote><p>一个360度全景照片浏览的 JS 库。官网有一些示例，非常酷。<br>我们生活，身边应用的有印象的就是买房、看房软件的360度环绕效果。 </p></blockquote><!-- 鸡汤一句 --><h4 id="End"><a href="#End" class="headerlink" title="End"></a>End</h4><blockquote><p>悲观者往往正确,乐观者往往成功.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本周是2020年的第十八个周末。&lt;br&gt;这里记录过去一周，我的一些总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- 制作一张最能反映过去一周的周图片 --&gt;
&lt;p&gt;&lt;img src=&quot;http://img.liugezhou.online/blog/weekly40.jpg&quot; alt=&quot;weekly-40&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Help the World by Healing Your NGINX Configuration</title>
    <link href="http://liugezhou.online/2020/05/01/Help%20the%20World%20by%20Healing%20Your%20NGINX%20Configuration/"/>
    <id>http://liugezhou.online/2020/05/01/Help the World by Healing Your NGINX Configuration/</id>
    <published>2020-05-01T05:27:49.000Z</published>
    <updated>2020-05-01T05:41:14.020Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Title：通过完善配置你的NGIINX来帮助世界"><a href="#Title：通过完善配置你的NGIINX来帮助世界" class="headerlink" title="Title：通过完善配置你的NGIINX来帮助世界"></a>Title：通过完善配置你的NGIINX来帮助世界</h5><blockquote><p>在2014年德克萨斯大学的著名演讲中，Admiral William H. McRaven(威廉-H-麦克拉文上将)曾说过，如果你想改变世界，就从铺床开始。有时候，小事也会产生大的影响—-无论是早上整理好你的床铺，还是对网站的HTTP服务器配置做一些小小的改动，都会产生很大的影响。 </p><p>这样说是不是有点夸大其词呢？2020年的头几个月已经把我们这个世界上所有正常和合理的活动都搞掉了。由于COVID-19大流行病，地球上几乎一半的人口都被关在家里。互联网已经成为我们唯一的交流、娱乐、买菜、工作、教育等的方式和途径。 因此每周互联网的网络流量和服务器负载都比以往任何时候都要高。 根据BroadbandNow在3月25日发布的一份报告，”在我们分析的200个城市中，与之前的10周相比，有44%的城市在过去一周内出现了一定程度的网络退化。”。</p></blockquote><blockquote><p>Netflix和YouTube等主要媒体平台为了保护网络链路，都在限制其传输质量，让人们有更多的带宽用于工作、与家人沟通，或者在学校上虚拟课。但这仍然是不够的，随着网络质量逐渐恶化，很多服务器都出现了超负荷的情况。</p></blockquote><h5 id="您可以通过优化您的网站提供帮助"><a href="#您可以通过优化您的网站提供帮助" class="headerlink" title="您可以通过优化您的网站提供帮助"></a>您可以通过优化您的网站提供帮助</h5><blockquote><p>如果你拥有一个网站，并且能够管理其HTTP服务器的配置，你可以提供帮助。几个小的改动就可以减少用户产生的网络带宽和服务器的负载。这是一个双赢的局面：如果你的网站目前处于高负载下，你可以降低负载，使你能够为更多的用户提供服务，并可能降低你的成本。如果它不是在高负载下，更快的加载速度会改善你的用户体验（有时会对你在Google搜索结果中的位置产生积极影响）。<br>如果你有一个每月有数百万用户的应用程序，或者是一个有烘焙食谱的小博客，这其实并不重要–你消除的每一KB的网络流量都能为那些急需在线检查医学检验结果或创建包裹标签来给亲戚寄送重要的东西的人释放出流量。<br>在这篇博客中，我们介绍了一些简单但功能强大的NGINX配置。作为一个现实世界的例子，我们使用的是我们的朋友Rogalove的电子商务网站，Rogalove是一个生态化妆品制造商，我住在波兰，在这里。该网站是一个相当标准的WooCommerce安装，运行NGINX 1.15.9作为其网络服务器。为了我们的计算，我们假设这个网站每天有100个独特的用户，30%的用户是经常性访客，每个用户平均在一个会话中访问4个页面。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Title：通过完善配置你的NGIINX来帮助世界&quot;&gt;&lt;a href=&quot;#Title：通过完善配置你的NGIINX来帮助世界&quot; class=&quot;headerlink&quot; title=&quot;Title：通过完善配置你的NGIINX来帮助世界&quot;&gt;&lt;/a&gt;Title：通过完善配
      
    
    </summary>
    
      <category term="翻译" scheme="http://liugezhou.online/categories/%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="nginx" scheme="http://liugezhou.online/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第三十九期</title>
    <link href="http://liugezhou.online/2020/04/19/issue-39/"/>
    <id>http://liugezhou.online/2020/04/19/issue-39/</id>
    <published>2020-04-19T02:45:00.000Z</published>
    <updated>2020-04-19T07:17:56.740Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周是2020年的第十六个周末。<br>这里记录过去一周，我的一些总结。</p></blockquote><!-- 制作一张最能反映过去一周的周图片 --><p><img src="http://img.liugezhou.online/blog/weekly39.png" alt="weekly-39"></p><a id="more"></a><!-- 一周最大感受 --><h4 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h4><blockquote><p>突然感觉自己就老了，对什么事情也提不起兴趣，对什么事情也毫无激情。<br>间歇性怀疑人生。</p></blockquote><h4 id="商品历史价格"><a href="#商品历史价格" class="headerlink" title="商品历史价格"></a><a href="http://www.lsjgcx.comlsjgcx.com" target="_blank" rel="noopener">商品历史价格</a></h4><blockquote><p>👆 淘宝，京东等商品历史价格查询，能更清晰了解商家的活动是否为虚假促销以及促销的力度。</p></blockquote><h4 id="斯诺登自传"><a href="#斯诺登自传" class="headerlink" title="斯诺登自传"></a><a href="https://a.temporaryrecord.com/" target="_blank" rel="noopener">斯诺登自传</a></h4><blockquote><p> 👆斯诺登自传《永久记录》—美国政府监控全世界网络信息的真相。<br>未删节的简体中文版 PDF 下载，作者本人授权。</p></blockquote><h4 id="Git-is-now-free-for-team"><a href="#Git-is-now-free-for-team" class="headerlink" title="Git is now free for team"></a>Git is now free for team</h4><blockquote><p>GitHub CEO Nat Friedman 在官方博客中正式宣布：即日起，所有用户都可以免费使用该平台的核心功能。无论是个人免费账户、还是商业项目团队，都可访问 GitHub 的无限私有存储库、以及每月 2000 分钟的 GitHub Actions 访问，后者是该公司的自动化和 CI / CD 平台。<br>本次重大的更新大概如下几点：</p><ul><li>对个人免费的私有仓库，现在对所有账号类型开放，取消协作者数量上限（之前个人私仓限制 3 个协作者）； </li><li>GitHub Pro 现在将包括 2GB 的 Packages 存储和 10GB 的数据传输；  </li><li>在官宣时间之前注册并已为团队服务付费的用户，订单到期之日按比例退款；  </li><li>自 5 月 14 日起，GitHub 团队每月将为私有仓库提供 3000 分钟的操作时间；  </li></ul></blockquote><h4 id="page-note-网页里的笔记"><a href="#page-note-网页里的笔记" class="headerlink" title="page note:网页里的笔记"></a>page note:网页里的笔记</h4><blockquote><p>一款Chrome浏览器插件，类似于之前记录的LINER。可以在网页中做笔记。</p></blockquote><h4 id="代码git仓库提交统计"><a href="#代码git仓库提交统计" class="headerlink" title="代码git仓库提交统计"></a>代码git仓库提交统计</h4><blockquote><p>git shortlog -sn 命令可以列出代码仓库的提交者统计。</p></blockquote><h4 id="Bash脚本教程"><a href="#Bash脚本教程" class="headerlink" title="Bash脚本教程"></a><a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">Bash脚本教程</a></h4><blockquote><p>👆 历时三个月，本周阮一峰老师总结的《Bash脚本教程》发布。</p></blockquote><!-- 鸡汤一句 --><h4 id="End"><a href="#End" class="headerlink" title="End"></a>End</h4><blockquote><p>时光匆匆，好似在高中课堂那会我问自己 我应该干些什么一样。此时的生活也断不了会这么想。<br>后来，我明白我并不是想干些什么，我是想在年轻的时候多留下些什么，老了可以念想一下。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本周是2020年的第十六个周末。&lt;br&gt;这里记录过去一周，我的一些总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- 制作一张最能反映过去一周的周图片 --&gt;
&lt;p&gt;&lt;img src=&quot;http://img.liugezhou.online/blog/weekly39.png&quot; alt=&quot;weekly-39&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第三十八期</title>
    <link href="http://liugezhou.online/2020/04/11/issue-38/"/>
    <id>http://liugezhou.online/2020/04/11/issue-38/</id>
    <published>2020-04-11T04:55:49.000Z</published>
    <updated>2020-04-12T07:35:53.045Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周是2020年的第十五个周末。<br>这里记录过去一周，我的一些总结。</p></blockquote><!-- 制作一张最能反映过去一周的周图片 --><p><img src="http://img.liugezhou.online/blog/weekly38.png" alt="weekly-38"></p><a id="more"></a><!-- 一周最大感受 --><h4 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h4><blockquote><p>世界很大，圈子很小。  </p></blockquote><h4 id="大炮"><a href="#大炮" class="headerlink" title="大炮"></a>大炮</h4><blockquote><p>接受纪律审查和监察调查。视频弹幕关闭，官媒停止评论，搜索不到。</p></blockquote><h4 id="个人所得税"><a href="#个人所得税" class="headerlink" title="个人所得税"></a>个人所得税</h4><blockquote><p>个人所得税北京补退税开通。<br>【专项附加扣除填报一定要填，特被注意租房一定要填】  </p></blockquote><h4 id="青客长租公寓"><a href="#青客长租公寓" class="headerlink" title="青客长租公寓"></a>青客长租公寓</h4><blockquote><p>国内第一家上市长租公寓(19年11月5日登陆纳斯达克挂牌上市)，疫情期间，青客强行解约，拖欠房东租金，导致租客被赶的一系列操作导致再次被推上风口浪尖。</p></blockquote><h4 id="专为程序员编写的英语学习指南-v1-2"><a href="#专为程序员编写的英语学习指南-v1-2" class="headerlink" title="专为程序员编写的英语学习指南 v1.2"></a><a href="https://github.com/yujiangshui/A-Programmers-Guide-to-English" target="_blank" rel="noopener">专为程序员编写的英语学习指南 v1.2</a></h4><blockquote><p>Github上一个八千多start的项目–专为程序员编写的英语学习指南 v1.2。<br>在线版本为：<a href="https://a-programmers-guide-to-english.harryyu.me/" target="_blank" rel="noopener">https://a-programmers-guide-to-english.harryyu.me</a></p></blockquote><h4 id="DeepL"><a href="#DeepL" class="headerlink" title="DeepL"></a><a href="https://www.deepl.com/translator" target="_blank" rel="noopener">DeepL</a></h4><blockquote><p>一家创业公司推出的机器翻译引擎，据称比谷歌翻译得更好。</p></blockquote><h4 id="RCS"><a href="#RCS" class="headerlink" title="RCS"></a>RCS</h4><blockquote><p>RCS 增强短信（富媒体信息收发）。<br>简言之类似与安卓版的 iMessage ，只不过主导厂商不再是苹果或者腾讯，而是运营商。  </p></blockquote><h4 id="COBOL"><a href="#COBOL" class="headerlink" title="COBOL"></a>COBOL</h4><blockquote><p>在抢口罩和呼吸机的同时，美国新泽西州州长在电视台上，公开招聘大龄程序员，要求是：50年程序员经验，掌握COBOL编程语言，时薪 55 美元至 85 美元！<br>原因为：疫情背景下，美国失业数据飙升，由于国家各项福利保障比较完善，失业人纷纷领取失业保险金，但失业保险系统用COBOL语言开发，由于系统故障，积累了太多的失业金无法发放，于是州长开始在电视台上公开招聘。<br>COBOL 全称为（Common Business Oriented Language），是数据处理领域最为广泛的程序设计语言。它是世界上第一个商用语言，第一个广泛使用的高级编程语言。<br>COBOL 应用的领域特别重要：金融，政府，航空公司。所有的银行，保险公司，金融机构都在大量使用 COBOL 写的程序。</p></blockquote><h4 id="每天前端一道前端面试题"><a href="#每天前端一道前端面试题" class="headerlink" title="每天前端一道前端面试题"></a>每天前端一道前端面试题</h4><blockquote><p>本周在哔哩哔哩上注册了一个<a href="https://space.bilibili.com/527313141?from=search&seid=1467228759580826016" target="_blank" rel="noopener">账号</a>，尝试着录了几个视频《每天一道前端面试题》。<br>一气呵成，效果不是很好，但，是一次很有意思的尝试。  </p></blockquote><h4 id="DOM变动发出声音"><a href="#DOM变动发出声音" class="headerlink" title="DOM变动发出声音"></a><a href="https://gist.github.com/tomhicks/6cb5e827723c4eaef638bf9f7686d2d8" target="_blank" rel="noopener">DOM变动发出声音</a></h4><blockquote><p>👆 一段 JS 代码，只要插在网页里面，可以让 DOM 变动发出声音。如果 DOM 有改变，你就会听到声音。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">const audioCtx = new (window.AudioContext || window.webkitAudioContext)()</span><br><span class="line">const observer = new MutationObserver(function(mutationsList) &#123;</span><br><span class="line">  const oscillator = audioCtx.createOscillator()</span><br><span class="line"></span><br><span class="line">  oscillator.connect(audioCtx.destination)</span><br><span class="line">  oscillator.type = &quot;sine&quot;</span><br><span class="line">  oscillator.frequency.setValueAtTime(</span><br><span class="line">    Math.log(mutationsList.length + 5) * 880,</span><br><span class="line">    audioCtx.currentTime,</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  oscillator.start()</span><br><span class="line">  oscillator.stop(audioCtx.currentTime + 0.01)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">observer.observe(document, &#123;</span><br><span class="line">  attributes: true,</span><br><span class="line">  childList: true,</span><br><span class="line">  subtree: true,</span><br><span class="line">  characterData: true,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><!-- 鸡汤一句 --><h4 id="End"><a href="#End" class="headerlink" title="End"></a>End</h4><blockquote><p>即使没有报酬，你也会去干的工作是什么？  </p></blockquote><blockquote><p>每个人心中都有一个火种，不要听任它熄灭，要找到它，点燃它。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本周是2020年的第十五个周末。&lt;br&gt;这里记录过去一周，我的一些总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- 制作一张最能反映过去一周的周图片 --&gt;
&lt;p&gt;&lt;img src=&quot;http://img.liugezhou.online/blog/weekly38.png&quot; alt=&quot;weekly-38&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第三十七期</title>
    <link href="http://liugezhou.online/2020/04/04/%E6%AF%8F%E5%91%A8%E6%80%BB%E7%BB%93%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E6%9C%9F/"/>
    <id>http://liugezhou.online/2020/04/04/每周总结第三十七期/</id>
    <published>2020-04-04T11:25:54.000Z</published>
    <updated>2020-04-04T11:25:57.120Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周是2020年的第十四个周末。<br>这里记录过去一周，我的生活、工作与娱乐的一些小总结。</p></blockquote><!-- 制作一张最能反映过去一周的周图片 --><p><img src="http://img.liugezhou.online/blog/weekly37.jpg" alt="weekly-37"></p><a id="more"></a><!-- 一周最大感受 --><h4 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h4><blockquote><p>浅水是喧哗的，深水是沉默的。（Shallow water is roaring, deep water is silent.）<br><cite>– 雪莱</cite></p></blockquote><h4 id="何以为家"><a href="#何以为家" class="headerlink" title="何以为家"></a>何以为家</h4><blockquote><p>《何以为家》由娜丁·拉巴基执导的2018年黎巴嫩剧情长片，由加拿大CTV电视网制作，于第71届戛纳电影节主竞赛单元首映。获得评审团奖和基督教评审团奖。也获得了金球奖最佳外语片和奥斯卡最佳外语片提名。<br>为了让观众意识到这个残酷的现实和所讲故事的真实性，导演纳迪拉巴基选择一批真实生活于迦百农类似的人出演影片，演员必须经历过这样的生活。<br>影片中的赞恩饰演者并不是职业演员，而是真实的叙利亚难民。被导演发掘时，当时12岁左右的他连自己的名字都不会写.</p></blockquote><h4 id="瑞幸咖啡"><a href="#瑞幸咖啡" class="headerlink" title="瑞幸咖啡"></a>瑞幸咖啡</h4><blockquote><p>本周大事件为瑞幸咖啡财务造假，伪造交易22亿，周三晚(北京时间)盘前暴跌80%。<br>由此引发的连锁反应还在持续，股价大跌，遭遇集体诉讼，用户出现挤兑式消费。</p></blockquote><h4 id="Colorables"><a href="#Colorables" class="headerlink" title="Colorables"></a><a href="https://www.colorabl.es/all" target="_blank" rel="noopener">Colorables</a></h4><blockquote><p>这个网站可以下载各种填色图片，打印以后让小朋友用蜡笔填色。</p></blockquote><h4 id="创客贴"><a href="#创客贴" class="headerlink" title="创客贴"></a><a href="https://www.chuangkit.com" target="_blank" rel="noopener">创客贴</a></h4><blockquote><p>👆创客贴是一款多平台（Web、Mobile、Mac 、Windows）极简图形编辑和平面设计工具，包括创客贴网页版、 iPhone、iPad、 桌面版  等。从功能使用上分，创客贴有个人版和团队协作版，提供图片素材和设计模板，通过简单的拖拉拽操作就可以设计出海报、PPT、名片、邀请函等各类设计图. </p></blockquote><h4 id="音频剪辑转码网站"><a href="#音频剪辑转码网站" class="headerlink" title="音频剪辑转码网站"></a><a href="http://www.ruanyifeng.com/blog/2020/04/weekly-issue-101.html" target="_blank" rel="noopener">音频剪辑转码网站</a></h4><blockquote><p>👆在线音频实时剪辑转码网站,这个网站兼顾了准专业性和傻瓜式的操作。<br>包含单轨编辑、音频转码、音频去燥、提取伴奏等功能。  </p></blockquote><h4 id="Liner"><a href="#Liner" class="headerlink" title="Liner"></a>Liner</h4><blockquote><p>Liner是一款谷歌浏览器插件，让你能对网页方便的”划重点”.</p></blockquote><h4 id="RSA的原理与实现"><a href="#RSA的原理与实现" class="headerlink" title="RSA的原理与实现"></a><a href="https://cjting.me/2020/03/13/rsa/" target="_blank" rel="noopener">RSA的原理与实现</a></h4><blockquote><p>👆这篇文章运用数学原理解释了RSA这种非对称加密方式的原理与实现，分析了私钥的生成、加密与解秘过程以及解秘证明等。<br>我们工作中Github或者远程服务器，以及微信、支付宝的支付等等都会用到这种RAS加密方式。<br>文章对于小白来说较为晦涩，需要花点时间去理解。这里做个文章收藏。 </p></blockquote><h4 id="从forEach到迭代器"><a href="#从forEach到迭代器" class="headerlink" title="从forEach到迭代器"></a><a href="https://juejin.im/post/5bcb249a6fb9a05d212ed038" target="_blank" rel="noopener">从forEach到迭代器</a></h4><blockquote><p>👆本文从使用 forEach 对数组进行遍历开始说起，粗略对比使用 forEach , for…in , for…of 进行遍历的差异，并由此引入 ES6 中 *可迭代对象/迭代器 *的概念，并对其进行粗略介绍。</p></blockquote><h4 id="本周小结"><a href="#本周小结" class="headerlink" title="本周小结"></a>本周小结</h4><blockquote><p>本周在学习上周总结中的一篇文章《前端100问》，对于JS中的一些基础知识，依然甚是欠缺。<br>文章大概看到十分之一，粗略总结了 Vue中的key、map(parseInt)、防抖截流、SET与MAP、拷贝、继承、对象等相关基础知识。<br>阮老师的开源书籍《ES6标准入门》，真的是ES6基础的精华，我一定要好好学完这本书。</p></blockquote><!-- 鸡汤一句 --><h4 id="End"><a href="#End" class="headerlink" title="End"></a>End</h4><blockquote><ul><li>工作是一场马拉松，而不是短跑。  </li><li>尊重人，而不是头衔。  </li><li>工作从白板开始，而不是键盘。  </li><li>产出的是价值，而不是代码。  </li><li>热爱生活，而不是工作。  </li><li>学会享受过程。</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本周是2020年的第十四个周末。&lt;br&gt;这里记录过去一周，我的生活、工作与娱乐的一些小总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- 制作一张最能反映过去一周的周图片 --&gt;
&lt;p&gt;&lt;img src=&quot;http://img.liugezhou.online/blog/weekly37.jpg&quot; alt=&quot;weekly-37&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第三十六期</title>
    <link href="http://liugezhou.online/2020/03/28/%E6%AF%8F%E5%91%A8%E6%80%BB%E7%BB%93%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E6%9C%9F/"/>
    <id>http://liugezhou.online/2020/03/28/每周总结第三十六期/</id>
    <published>2020-03-28T10:55:00.000Z</published>
    <updated>2020-03-28T13:33:21.399Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周是2020年的第十三个周末。<br>这里记录过去一周，我的一些总结。</p></blockquote><!-- 制作一张最能反映过去一周的周图片 --><p><img src="http://img.liugezhou.online/blog/weekly36.jpg" alt="weekly-36"></p><a id="more"></a><!-- 一周最大感受 --><h4 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h4><blockquote><p>Talk is cheap,show the code.</p></blockquote><h4 id="东京奥运会"><a href="#东京奥运会" class="headerlink" title="东京奥运会"></a>东京奥运会</h4><blockquote><p>国际奥委会和东京奥组委发布联合声明：同意东京奥运会推迟至2021年夏天举办，2020东京奥运会及残奥会的称呼将保留。</p></blockquote><h4 id="透明国际"><a href="#透明国际" class="headerlink" title="透明国际"></a>透明国际</h4><blockquote><p>透明国际(Transparency International)即“国际透明组织”，简称TI，是一个非政府、非盈利、国际性的民间组织。“透明国际”于1993年由德国人彼得·艾根创办，总部设在德国柏林，以<code>推动全球反腐败运动</code>为己任，今天已成为对腐败问题研究得最权威、最全面和最准确的国际性非政府组织，目前已在90多个国家成立了分会。它的研究结果经常被其他权威国际机构反复引用。</p></blockquote><h4 id="北大团队“精准删除特定记忆”登上Science子刊"><a href="#北大团队“精准删除特定记忆”登上Science子刊" class="headerlink" title="北大团队“精准删除特定记忆”登上Science子刊"></a>北大团队“精准删除特定记忆”登上Science子刊</h4><blockquote><p>近日，北京大学神经科学研究所的伊鸣研究员和万有教授团队在 Science 子刊 Science Advances发表了一篇论文，实现了在实验大鼠的脑中实现了特定记忆的精准删除。<br>论文作者之一、北京大学神经科学研究所研究员伊鸣表示，此项研究有望为慢性痛、成瘾等以“病理性记忆”为特征的疾病治疗提供新思路。<br><a href="https://advances.sciencemag.org/content/6/12/eaay6687.full" target="_blank" rel="noopener">论文地址</a></p></blockquote><h4 id="冠状病毒之后的世界"><a href="#冠状病毒之后的世界" class="headerlink" title="冠状病毒之后的世界"></a><a href="https://mp.weixin.qq.com/s/Mhj0jf4N5p4kb_fqdjP43w" target="_blank" rel="noopener">冠状病毒之后的世界</a></h4><blockquote><p>👆《人类简史》的作者尤瓦尔·赫拉利，上周末在《金融时报》发表了一篇长文《冠状病毒之后的世界》。<br>他谈到疫情结束后，世界向何处去的问题，以及对目前各国没有统一行动的计划，反而各自为战、竞相关闭边境的担忧。</p></blockquote><h4 id="GitHub-中文项目排行榜"><a href="#GitHub-中文项目排行榜" class="headerlink" title="GitHub 中文项目排行榜"></a><a href="https://github.com/kon9chunkit/GitHub-Chinese-Top-Charts" target="_blank" rel="noopener">GitHub 中文项目排行榜</a></h4><blockquote><p>👆🇨🇳 GitHub中文排行榜，帮助你发现高分优秀中文项目。<br>设立1个总榜（所有语言项目汇总排名）、18个分榜（单个语言项目排名）;</p></blockquote><h4 id="pont"><a href="#pont" class="headerlink" title="pont"></a><a href="https://github.com/alibaba/pont" target="_blank" rel="noopener">pont</a></h4><blockquote><p>👆VSCode插件。Pont 把 swagger、rap、dip 等多种接口文档平台，转换成 Pont 元数据。<br>Pont 利用接口元数据，可以高度定制化生成前端接口层代码，接口 mock 平台和接口测试平台。<br>其中 swagger 数据源，Pont 已经完美支持。</p></blockquote><h4 id="前端-100-问"><a href="#前端-100-问" class="headerlink" title="前端 100 问"></a><a href="https://juejin.im/post/5d23e750f265da1b855c7bbe" target="_blank" rel="noopener">前端 100 问</a></h4><blockquote><p>👆突然不知道前端学习什么？<br>可以看看一些大佬们整理的前端问题。</p></blockquote><h4 id="快速AI自动抠图！"><a href="#快速AI自动抠图！" class="headerlink" title="快速AI自动抠图！"></a><a href="https://www.remove.bg/zh" target="_blank" rel="noopener">快速AI自动抠图！</a></h4><blockquote><p>在线图片背景消除网站。</p></blockquote><h4 id="颜值即正义-哪些管UI小姐姐要来的网站"><a href="#颜值即正义-哪些管UI小姐姐要来的网站" class="headerlink" title="颜值即正义,哪些管UI小姐姐要来的网站"></a><a href="https://juejin.im/post/5e7cdee26fb9a03c6e640cc7" target="_blank" rel="noopener">颜值即正义,哪些管UI小姐姐要来的网站</a></h4><blockquote><p>👆一些UI网站收集。</p></blockquote><!-- 鸡汤一句 --><h4 id="End"><a href="#End" class="headerlink" title="End"></a>End</h4><blockquote><p>本周总结有些水，没有积累、关注什么，总体来说很丧。<br>花了一天时间读了linux之父linus的自传《Just for Fun》,对为开源世界作出推动力量的linus有了一个大概认识。<br>很cool.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本周是2020年的第十三个周末。&lt;br&gt;这里记录过去一周，我的一些总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- 制作一张最能反映过去一周的周图片 --&gt;
&lt;p&gt;&lt;img src=&quot;http://img.liugezhou.online/blog/weekly36.jpg&quot; alt=&quot;weekly-36&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第三十五期</title>
    <link href="http://liugezhou.online/2020/03/21/%E6%AF%8F%E5%91%A8%E6%80%BB%E7%BB%93%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%94%E6%9C%9F/"/>
    <id>http://liugezhou.online/2020/03/21/每周总结第三十五期/</id>
    <published>2020-03-21T12:22:40.000Z</published>
    <updated>2020-03-21T12:29:55.989Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周是2020年的第十二个周末。<br>这里记录过去一周，我的一些总结。</p></blockquote><!-- 制作一张最能反映过去一周的周图片 --><p><img src="http://img.liugezhou.online/blog/weekly35.jpg" alt="weekly-35"></p><a id="more"></a><!-- 一周最大感受 --><h4 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h4><blockquote><p>Just for Fun (只是为了好玩) 。<br>本书是Linux之父Linus Torvalds的自传。<br>Linux之父Linus Torvalds的自传，也是Linus唯一一本书。Linus以调侃的语气讲述了自己的成长经历，在他看来，一切都是为了好玩儿，兴趣引发革命。书中内容共分为五章，一部分是Linus自己写的，一部分是合著者David Diamond的评论。<br>林纳斯•托瓦兹 当今世界最著名的程序员、黑客，开源操作系统Linux之父。生于芬兰，毕业于赫尔辛基大学，1997年～2003年任职于美国加州硅谷的全美达公司，现受聘于开放源代码开发实验室，全力开发Linux内核。2004年，他被《时代周刊》评为世界最有影响力的人之一。<br>大卫•戴蒙 职业撰稿人，曾为《纽约时报》《连线》《美国周末》及许多刊物供稿。 </p></blockquote><h4 id="黄金价格"><a href="#黄金价格" class="headerlink" title="黄金价格"></a>黄金价格</h4><blockquote><p>黄金价格不断上涨，2020年3月16日金银比价创下123.78的记录，即等重量的黄金价格是白银的123.78倍。这是人类5000年来的最高记录。</p></blockquote><h4 id="滴滴跑腿"><a href="#滴滴跑腿" class="headerlink" title="滴滴跑腿"></a>滴滴跑腿</h4><blockquote><p>滴滴跑腿推出一项用户福利活动，从3月21日起，用户每天首笔订单费用0.1元，此优惠将连续11天。此前，滴滴已在21个城市上线跑腿服务。(from 36ke)</p></blockquote><h4 id="git-install"><a href="#git-install" class="headerlink" title="git install"></a>git install</h4><blockquote><p>本周开源社区劲爆的一条新闻是：Github宣布收购npm。<br>至此，TypeScript, VS Code, GitHub, npm 都是微软的。<br>有开发者评论道：<br>「 微软通过收购 GitHub 接管了整个开源生态系统，<br>通过收购 npm 接管了整个 JavaScript 生态系统<br>通过 Visual Studio Code 占领了大部分开发者的机器<br>通过 TypeScript 改变了开发者使用 JavaScript 的方式。<br>因此可以认为，JavaScript 现在基本上是属于微软的。」</p></blockquote><h4 id="PacVim"><a href="#PacVim" class="headerlink" title="PacVim"></a><a href="https://github.com/jmoon018/PacVim" target="_blank" rel="noopener">PacVim</a></h4><blockquote><p>👆Github上一个让你通过玩游戏学习 Vim 命令的游戏PacVim，类似于PacMan(吃豆人)。<br>该游戏在终端即可打开使用，玩法详见上面链接项目仓库介绍或者：<a href="https://mp.weixin.qq.com/s/aauMKWZhzsYeayj1S0FffQ" target="_blank" rel="noopener">Vim一直学不会？试试这个 “真香” 神器</a> </p></blockquote><h4 id="Github移动端上线"><a href="#Github移动端上线" class="headerlink" title="Github移动端上线"></a>Github移动端上线</h4><blockquote><p>GitHub移动端：iOS与安卓版终于上线了，在iOS应用市场搜索不到，需要在网页:<a href="https://github.com/mobile/中点击下载，在AppStore中打开下载。" target="_blank" rel="noopener">https://github.com/mobile/中点击下载，在AppStore中打开下载。</a><br>由于国内网络原因，体验并不是很友好。</p></blockquote><h4 id="微信服务平台上架13种接口能力"><a href="#微信服务平台上架13种接口能力" class="headerlink" title="微信服务平台上架13种接口能力"></a><a href="https://mp.weixin.qq.com/s/k07xNw6kn22Bdhgt_KqSBQ" target="_blank" rel="noopener">微信服务平台上架13种接口能力</a></h4><blockquote><p>👆 为了提升开发者的开发运营效率，节省开发资源，3月17日，微信服务平台上架了13种接口能力，包括微信OCR识别、地址解析、珊瑚图片内容安全等，可支持开发者快速进行调用，帮助各行业打造完善的服务链。</p></blockquote><h4 id="CentOS7安装MySQL数据库"><a href="#CentOS7安装MySQL数据库" class="headerlink" title="CentOS7安装MySQL数据库"></a><a href="https://help.aliyun.com/document_detail/116727.html?spm=5176.11065259.1996646101.searchclickresult.c3be2f1auy5Wbc" target="_blank" rel="noopener">CentOS7安装MySQL数据库</a></h4><blockquote><p>👆CentOS7上安装mysql数据库的文章特别特别的多，这篇阿里云文档给出的安装教程简单、清晰，可以快速在CentOS7上安装mysql数据库、配置远程访问等。</p></blockquote><h4 id="CentOS升级git版本"><a href="#CentOS升级git版本" class="headerlink" title="CentOS升级git版本"></a><a href="https://www.cnblogs.com/Hi-blog/p/How-To-Update-Git-On-CentOS7.html" target="_blank" rel="noopener">CentOS升级git版本</a></h4><blockquote><p>👆一篇总结简单、易懂的文章，介绍快速在CentOS上升级git版本。</p></blockquote><h4 id="VsCode插件，自动生成注释koroFileHeader"><a href="#VsCode插件，自动生成注释koroFileHeader" class="headerlink" title="VsCode插件，自动生成注释koroFileHeader"></a><a href="https://blog.csdn.net/SevenGirl2017/article/details/88424641" target="_blank" rel="noopener">VsCode插件，自动生成注释koroFileHeader</a></h4><blockquote><p>整洁的代码一定是代码注释简洁明了，koroFileHeader插件可快速定制自己的文件头以及光标处的代码注释生成。</p></blockquote><!-- 鸡汤一句 --><h4 id="End"><a href="#End" class="headerlink" title="End"></a>End</h4><blockquote><p>西瓜视频、抖音、今日头条、《大赢家》出品方共同宣布，于3月20日晚八点免费上线喜剧电影《大赢家》。该片由于淼执导，大鹏、柳岩主演，讲述了一次抢劫演习中所发生的幽默故事。<br>so,看电影去喽。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本周是2020年的第十二个周末。&lt;br&gt;这里记录过去一周，我的一些总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- 制作一张最能反映过去一周的周图片 --&gt;
&lt;p&gt;&lt;img src=&quot;http://img.liugezhou.online/blog/weekly35.jpg&quot; alt=&quot;weekly-35&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第三十四期</title>
    <link href="http://liugezhou.online/2020/03/15/%E6%AF%8F%E5%91%A8%E6%80%BB%E7%BB%93%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E6%9C%9F/"/>
    <id>http://liugezhou.online/2020/03/15/每周总结第三十四期/</id>
    <published>2020-03-15T06:45:27.000Z</published>
    <updated>2020-03-15T07:14:19.437Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周是2020年的第十一个周末。<br>这里记录过去一周，我的一些总结。</p></blockquote><p><img src="http://img.liugezhou.online/blog/weekly34.jpeg" alt="weekly-34"></p><a id="more"></a><h4 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h4><blockquote><p>每个夜晚来临的时候，每个清晨苏醒的时候，脑中思维不停盘旋：我是谁？我来自哪里？我将要去向何处？我正在干嘛？</p></blockquote><h4 id="全球股市暴跌"><a href="#全球股市暴跌" class="headerlink" title="全球股市暴跌"></a>全球股市暴跌</h4><blockquote><p>过去一周，全球股市暴跌，石油战诱发美股跌停熔断，另有疫情夹击，12个国家股市于3月12日发生“熔断“。<br>这一天将会被股市历史牢牢铭记。<br>据说中国历史上也推行过熔断制度，但自从熔断制度推出后，接连两天触发熔断，于是撤回。<br>朋友圈看到一个段子,很鲜活：<br><code>金融行业每天的工作，早上八点起床先看国外肺炎人数，看美股收盘点数。八点半，看亚太崩盘，九点半看大A震荡，下午四点看欧洲崩盘，晚上九点半看美股开盘崩盘</code><br>惨不忍睹。<br><a href="https://mp.weixin.qq.com/s/TJvfe99YFhctkCakS0Hrjg" target="_blank" rel="noopener">这篇文章</a>简单、通俗的解释了有关熔断定义规则、熔断历史等内容(该文章发于2020年3月10日)。  </p></blockquote><h4 id="《人物》"><a href="#《人物》" class="headerlink" title="《人物》"></a>《人物》</h4><blockquote><p>2020年3月10日，《人物》杂志发表了一篇名为《发哨子的人》的特稿，文章发布数小时后，随后在国内所有的媒体平台全面删除，采访内容让人们更为真实地了解到这场现代社会最为严重的疫情是缘何扩散，以及处于漩涡中心的武汉人民经受怎样的苦难。 </p><p><a href="https://mp.weixin.qq.com/s/unmdEd7tN--frL88xAYScg" target="_blank" rel="noopener">《人物》被删文章：发哨子的人</a><br><a href="https://jsbin.com/soqaxuj/edit?html,output" target="_blank" rel="noopener">序员版本</a></p><p>有人总结道「也算创了传播史上的一个小记录：一而删，再而转；你越删，我越转，前赴后继锲而不舍飞蛾扑火宁死不屈大义凛然不可描述无法形容的壮烈与顽固」。</p></blockquote><h4 id="yuange1975"><a href="#yuange1975" class="headerlink" title="yuange1975"></a>yuange1975</h4><blockquote><p>微博用户@yuange1975持续质疑微博借钱利息高，被微博平台炸号。<br>此人是国内首屈一指的网络安全专家，腾讯沪湛实验室掌门人.</p></blockquote><h4 id="微信读书助手"><a href="#微信读书助手" class="headerlink" title="微信读书助手"></a><a href="https://chrome.google.com/webstore/search/%E5%BE%AE%E4%BF%A1%E8%AF%BB%E4%B9%A6%E5%8A%A9%E6%89%8B?utm_source=chrome-ntp-icon" target="_blank" rel="noopener">微信读书助手</a></h4><blockquote><p>👆 Chrome浏览器插件–一款自动组队、备份笔记、听书的微信读书插件。</p></blockquote><h4 id="从一到无穷大"><a href="#从一到无穷大" class="headerlink" title="从一到无穷大"></a>从一到无穷大</h4><blockquote><p>乔治·伽莫夫（1904-1968, George Gamow）世界著名物理学家和天文学家。<br>《从一到无穷大：科学中的事实和臆测》是当今世界最有影响的科普经典名著之一，1970年代末由科学出版社引进出版后，曾在国内引起很大反响，直接影响了众多的科普工作者。<br>豆瓣评分9.1。</p></blockquote><h4 id="https-yandex-com"><a href="#https-yandex-com" class="headerlink" title="https://yandex.com/"></a><a href="https://yandex.com/" target="_blank" rel="noopener">https://yandex.com/</a></h4><blockquote><p>俄罗斯搜索引擎 Yandex,图片搜索很赞。 </p></blockquote><h4 id="Chrome-80-开发者工具两个特性"><a href="#Chrome-80-开发者工具两个特性" class="headerlink" title="Chrome 80 开发者工具两个特性"></a>Chrome 80 开发者工具两个特性</h4><blockquote><ul><li>在控制台中已支持 let 和 class 重新声明。  </li><li>Network 面板：增加新的 Path 列和 Url 列查看每个网络资源的绝对路径或完整URL。开启方式：需要在NetWork面板的菜单栏右击选择显示。        </li><li>Network 面板:增加initiator列，可以将网络请求的启动器和依赖项作为嵌套列表查看，帮助你理解为什么要请求某个资源，或者某个资源(例如脚本)导致了什么网络活动。</li></ul></blockquote><h4 id="第一次使用VS-Code时你应该知道的一切配置"><a href="#第一次使用VS-Code时你应该知道的一切配置" class="headerlink" title="第一次使用VS Code时你应该知道的一切配置"></a><a href="https://juejin.im/post/5cb87c6e6fb9a068a03af93a" target="_blank" rel="noopener">第一次使用VS Code时你应该知道的一切配置</a></h4><blockquote><p>👆这是一篇总结的非常全面的VSCode使用技巧，包括常用快捷键、光标使用、Terminal启动、高级进阶使用、推荐的一些很高级的插件使用等等。根据这篇文章温习了一下使用技巧，且体验使用了几个插件：<br>Bracket Pair Colorizer 2 、Project Manager 、Color Manager 、Code Time、RemoteHub 、Live Share等。</p></blockquote><h4 id="lodash"><a href="#lodash" class="headerlink" title="lodash"></a>lodash</h4><blockquote><p>一个提供模块化、高性能和额外功能的现代JavaScript实用程序库.</p></blockquote><h4 id="JS基础–typeof、instanceof、Object-prototype-toString"><a href="#JS基础–typeof、instanceof、Object-prototype-toString" class="headerlink" title="JS基础–typeof、instanceof、Object.prototype.toString"></a>JS基础–typeof、instanceof、Object.prototype.toString</h4><blockquote><ul><li>typeof用在基本数据类型和函数时，返回其对应类型的描述，对于引用类型都返回为object.   </li><li>instanceof无法判断基本数据类型，对于引用类型数据，返回其其对应类型.    </li><li>Object.prototype.toString无论基本数据类型还是引用类型返回其对应类型.   </li></ul></blockquote><h4 id="vscode保存时自动按eslint格式化"><a href="#vscode保存时自动按eslint格式化" class="headerlink" title="vscode保存时自动按eslint格式化"></a><a href="https://www.haorooms.com/post/vscode_eslint" target="_blank" rel="noopener">vscode保存时自动按eslint格式化</a></h4><blockquote><p> 👆通过简单的配置，使得在VSCode中编写代码保存时，自动按eslint格式进行代码格式化。</p></blockquote><h4 id="End"><a href="#End" class="headerlink" title="End"></a>End</h4><blockquote><p>每个人的生活都是一条通向自身的道路。每个人的真正职责只有一个：找到自我。然后在心中坚守一生，全心全意，永不停息。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本周是2020年的第十一个周末。&lt;br&gt;这里记录过去一周，我的一些总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://img.liugezhou.online/blog/weekly34.jpeg&quot; alt=&quot;weekly-34&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第三十三期</title>
    <link href="http://liugezhou.online/2020/03/07/%E6%AF%8F%E5%91%A8%E6%80%BB%E7%BB%93%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E6%9C%9F/"/>
    <id>http://liugezhou.online/2020/03/07/每周总结第三十三期/</id>
    <published>2020-03-07T12:11:00.000Z</published>
    <updated>2020-03-07T12:31:11.935Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周是2020年的第十个周末。<br>这里记录过去一周，我的一些总结。</p></blockquote><p><img src="http://img.liugezhou.online/weekly33.jpg" alt="weekly-33"></p><a id="more"></a><h4 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h4><blockquote><p>DONE IS BETTER THAN PERFECT.</p></blockquote><h4 id="飞书"><a href="#飞书" class="headerlink" title="飞书"></a>飞书</h4><blockquote><p>飞书被微信屏蔽了<br>报道飞书被微信屏蔽的媒体被微信屏蔽了<br>报道报道飞书被微信屏蔽的媒体被微信屏蔽的媒体被微信屏蔽了      </p><p align="right">DIYGOD</p></blockquote><h4 id="网络信息内容生态治理规定"><a href="#网络信息内容生态治理规定" class="headerlink" title="网络信息内容生态治理规定"></a><a href="http://www.cac.gov.cn/2019-12/20/c_1578375159509309.htm" target="_blank" rel="noopener">网络信息内容生态治理规定</a></h4><blockquote><p>👆 2020年3月1日开始，多条新规开始实行，其中网络条例带来的好消息表明：以后网络信息内容可能不会有坏消息了。</p></blockquote><h4 id="Github打开新标签页"><a href="#Github打开新标签页" class="headerlink" title="Github打开新标签页"></a>Github打开新标签页</h4><blockquote><p>Github上存在这一个明显的问题是，很多的第三方网页都是在当前标签页打开，对开发者来说很不友好，作为一个这么大的网站，或许是有其什么设计考虑吧。</p></blockquote><h4 id="nprogress"><a href="#nprogress" class="headerlink" title="nprogress"></a><a href="https://github.com/rstacruz/nprogress" target="_blank" rel="noopener">nprogress</a></h4><blockquote><p>👆一个超轻量进度条的开源库，使用极其简单。</p></blockquote><h4 id="node项目基础第三方包"><a href="#node项目基础第三方包" class="headerlink" title="node项目基础第三方包"></a>node项目基础第三方包</h4><blockquote><p>搭建一个node后端项目编写接口的时候，下面是在构建基础项目的时候依赖的第三方包：<br>express：基于Node.js平台的web应用开发框架<br>mysql：连接数据库<br>body-parser:body-parser是非常常用的一个express中间件，作用是对post请求的请求体进行解析<br>boom：封装了状态码接口错误的返回信息，使用用例(boom.NotFound(),boom.badRequest(),boom.gatewayTimeout()等)<br>jsonwentoken:后台生成给前端的token数据，通过sign方法生成,通过verify方法解析。<br>express-jwt: 除白名单之外的接口，进行token是否过期验证，如果未过期，使用verfify进行token解析。<br>express-validator:是一个功能强大的表单验证器，它是 validator.js 的中间件，使用 express-validator 可以简化 POST 请求的参数验证<br>crypto: 加密方式。<br>cors: 解决跨域问题。<br>等。</p></blockquote><h4 id="使用nvm安装管理nodejs"><a href="#使用nvm安装管理nodejs" class="headerlink" title="使用nvm安装管理nodejs"></a>使用nvm安装管理nodejs</h4><blockquote><p>本周在项目部署中遇到有关nodejs版本切换的问题,终于还是碰到了nvm。<br>安装过程遇到一个小坑，要先删除之前的node，下面总结一下安装nvm的过程：   </p><ul><li><ol><li>sudo rm -rf /usr/local/lib/node_modules # 删除全局 node_modules 目录      </li></ol></li><li><ol start="2"><li>sudo rm /usr/local/bin/node  # 删除 node     </li></ol></li><li><ol start="3"><li>cd /usr/local/bin &amp;&amp; ls -l | grep “../lib/node_modules/“ | awk ‘{print $9}’| xargs rm    # 删除全局 node 模块注册的软链  </li></ol></li><li><ol start="4"><li>curl安装：curl -o- <a href="https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh" target="_blank" rel="noopener">https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh</a> | bash(试了好几次)    </li></ol></li><li><ol start="5"><li>nvm –version 查看安装版本       </li></ol></li><li><ol start="6"><li>查看服务器端可用的 Node.js 版本:nvm ls-remote    </li></ol></li><li><ol start="7"><li>安装 8.* LTS 版本 (长久维护版本) 和12版本：nvm install 8.11.2 （12）   </li></ol></li><li><ol start="8"><li>查看本地可用的node.js版本： nvm list </li></ol></li><li><ol start="9"><li>切换node版本 ：nvm use 8   </li></ol></li><li><ol start="10"><li>设置默认版本：nvm alias default 12</li></ol></li></ul></blockquote><h4 id="tar命令解压文件造成目录权限修改"><a href="#tar命令解压文件造成目录权限修改" class="headerlink" title="tar命令解压文件造成目录权限修改"></a>tar命令解压文件造成目录权限修改</h4><blockquote><p>如果在指定解压时指定参数-no-same-owner(即 tar -no-same-owner -zxvf xxx.tar.gz),则会将执行该tar命令的用户作为解压后的文件目录的所有者。这是因为tar命令在解压时会默认指定参数–same-owner。<br>简言之，如果使用tar命令导致文件目录权限修改,可添加-no-same-owner参数。</p></blockquote><h4 id="END"><a href="#END" class="headerlink" title="END"></a>END</h4><blockquote><p>表面上，每个人都在强调自己有独立的人格，但是实际上，只有与他人稍稍有所不同，我们就会怕的要死，时刻都在提醒自己，一定要装的与其他人一致。  </p><p align="right">前方的路^体制与个性</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本周是2020年的第十个周末。&lt;br&gt;这里记录过去一周，我的一些总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://img.liugezhou.online/weekly33.jpg&quot; alt=&quot;weekly-33&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第三十二期</title>
    <link href="http://liugezhou.online/2020/02/29/%E6%AF%8F%E5%91%A8%E6%80%BB%E7%BB%93%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E6%9C%9F/"/>
    <id>http://liugezhou.online/2020/02/29/每周总结第三十二期/</id>
    <published>2020-02-29T10:48:00.000Z</published>
    <updated>2020-02-29T14:16:14.949Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周是2020年的第九个周末。<br>这里记录过去一周，我的一些总结。</p></blockquote><p><img src="http://img.liugezhou.online/blog/weekly32.png" alt="weekly-32"></p><a id="more"></a><h4 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h4><blockquote><p>本周在家粗略的看了一本由阮一峰译保罗·格雷厄姆的一本文集：《黑客与画家 : 硅谷创业之父Paul Graham文集》。<br>保罗·格雷厄姆被称为硅谷创业之父，自毕业初期,他的梦想是当一名画家,由于入不敷出,改行写软件。与朋友合伙创立了 Y Combinator(YC),根据保罗·格雷厄姆设想,它既是一个创业公司的孵化器,也是一个教导员,还是一个与投资人联系的中介.</p><p>下面是他书中的一些内容：<br>没有什么比一个共同的敌人更能使得人们团结起来了。这就好比一个政客，他想让选民忘记糟糕的国内局势，方法就是为国家找出一个敌人，哪怕敌人真的不存在，他也可以创造一个出来。一群人在一起，挑出一个书呆子，居高临下的欺负他，就会把彼此联系起来。一起攻击一个外人，所有人因此都成了自己人。这就是为什么最恶劣的以强凌弱的事件都与团体有关的原因。随便找一个书呆子，他都会告诉你，一群人的虐待比一个人的虐待残酷的多。</p><p>历史的常态似乎就是，任何一个年代的人们，都会对一些荒谬的东西深信不疑。他们的信念还很坚定，只要有人稍微表示一点怀疑，就会惹来大麻烦。</p><p>触怒他人的言论是那些可能会有人相信的言论。我猜想，最令人暴跳如雷的言论，就是被认为说出了真相的言论。</p><p>对于做产品的公司，等你咨询公司帮你出主意的时候，就是你开始走向灭亡的时候。</p><p>你把整个程序想清楚的时间点，应该是在编写代码的同时，而不是在编写代码之前，这与作家、画家和建筑师的做法完全不一样。它意味着，编程语音的首要特性应该是允许动态扩展。<br>编程语言是用来帮助思考程序的，而不是用来表达你已经想好的程序。它应该是一支铅笔，而不是一支钢笔。如果大家都像学校教的那样编程，那么静态类型是一个不错的概念。但是我认识的黑客，没有一个人喜欢用静态类型语言编程。我们需要的是一种可以随意涂抹、擦擦改改的语言，我们不想正襟危坐，把一个盛满各种变量类型的茶杯，小心翼翼放在自己的膝盖上，为了与一丝不苟的编译器大婶交谈，努力地挑选词语，确保变量类型匹配，好让自己显得礼貌又周到.</p><p>任何一门艺术，不管是否重要，如果你想要在该领域出类拔萃，就必须全身心投入。</p><p>我们认定无法解决的难题，事实上完全可以解决。</p></blockquote><h4 id="中华人们共和国外国人永久居留管理条例"><a href="#中华人们共和国外国人永久居留管理条例" class="headerlink" title="中华人们共和国外国人永久居留管理条例"></a><a href="http://www.moj.gov.cn/news/content/2020-02/27/zlk_3242559.html" target="_blank" rel="noopener">中华人们共和国外国人永久居留管理条例</a></h4><blockquote><p>👆此连接是2020年2月27日，中华人民共和国司法部网站发布的“中华人们共和国外国人永久居留管理条例(征求意见稿)”，在网上引起轩然大波、激烈讨论。</p></blockquote><h4 id="拼多多开启新一轮广告投送"><a href="#拼多多开启新一轮广告投送" class="headerlink" title="拼多多开启新一轮广告投送"></a>拼多多开启新一轮广告投送</h4><blockquote><p>本周拼多多开启新一轮广告补贴，深度极广，多数微信公众号大V有力参与。</p></blockquote><h4 id="Kbone"><a href="#Kbone" class="headerlink" title="Kbone"></a>Kbone</h4><blockquote><p>最近微信官方重磅推出了一个统一Web前端和小程序的框架 —— Kbone,代码已在Github开源。<br>微信小程序的底层模型和 Web 端不同，开发者无法直接把 Web 端的代码挪到小程序环境内执行。<br>Kbone 的诞生就是为了解决这个问题，它实现了一个适配器，在适配层里模拟出了浏览器环境，让 Web 端的代码可以不做什么改动，便可运行在小程序里。<br>Kbone的缺点是：使用一定的性能损耗，来换取更为全面的 Web 端特性支持。  </p></blockquote><h4 id="SwitchHosts"><a href="#SwitchHosts" class="headerlink" title="SwitchHosts"></a><a href="https://oldj.github.io/SwitchHosts/" target="_blank" rel="noopener">SwitchHosts</a></h4><blockquote><p>👆一个可以快速添加、修改、切换 本地hosts 文件的小工具。</p></blockquote><h4 id="epub"><a href="#epub" class="headerlink" title="epub"></a>epub</h4><blockquote><p>epub是Electronic Publication的缩写，译为：电子出版。这是一个自由的开放标准，许多电子书的软件都是基于epub格式的电子书进行的开发。  </p></blockquote><h4 id="Network-Link-Conditioner"><a href="#Network-Link-Conditioner" class="headerlink" title="Network Link Conditioner"></a>Network Link Conditioner</h4><blockquote><p>网络环境的好坏，有时会让你的产品带给用户完全不同的体验，作为开发者，在开发项目过程中，我们需要进行对于网络环境的调试。Mac环境下模拟慢速网络可以使用苹果官方提供的工具：Network Link Conditioner。</p></blockquote><h4 id="VSCode设置侧边颜色"><a href="#VSCode设置侧边颜色" class="headerlink" title="VSCode设置侧边颜色"></a>VSCode设置侧边颜色</h4><blockquote><p>查看项目的时候，有时我们会打开多个窗口，为了增加窗口打开项目的识别(窗口侧边颜色修改)，我们可以在项目的.vscode/setting.json中进行配置：  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    …………</span><br><span class="line">    &quot;workbench.colorCustomizations&quot;:&#123;</span><br><span class="line">        &quot;activityBar.background&quot;: &quot;#a06a05&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    …………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用Inspector调试node-js"><a href="#使用Inspector调试node-js" class="headerlink" title="使用Inspector调试node.js"></a><a href="https://www.imooc.com/learn/1093" target="_blank" rel="noopener">使用Inspector调试node.js</a></h4><blockquote><p>慕课网上的一个免费nodejs调试入门视频课。<br>这门课程简要、简单的总结了调试nodejs的多个方法，以及对inpector的调试api进行了简单演示。</p></blockquote><h4 id="vue-element-ui"><a href="#vue-element-ui" class="headerlink" title="vue-element-ui"></a><a href="https://github.com/PanJiaChen/vue-element-admin" target="_blank" rel="noopener">vue-element-ui</a></h4><blockquote><p>👆一个后台前端的开源框架，star数马上五万。采用最新的前端技术栈，提供丰富的功能组件，并且提供了基础模板，方便快速搭建企业期中后台产品原型。</p></blockquote><h4 id="Vue音乐APP"><a href="#Vue音乐APP" class="headerlink" title="Vue音乐APP"></a><a href="http://music.liugezhou.online" target="_blank" rel="noopener">Vue音乐APP</a></h4><blockquote><p>本周将之前学习的一门课程《Vue2.0开发企业级移动音乐APP》通过nginx，使用pm2管理，进行了线上部署，部署地址：<a href="http://music.liugezhou.online，由于课程久远，在iPhone客户端上出现播放歌曲没有声音的bug，仍未修复。" target="_blank" rel="noopener">http://music.liugezhou.online，由于课程久远，在iPhone客户端上出现播放歌曲没有声音的bug，仍未修复。</a></p></blockquote><h4 id="End"><a href="#End" class="headerlink" title="End"></a>End</h4><blockquote><p>人们真正注意到你的时候，不是第一眼看到你站在那里，而是发现过了这么久你居然还在那里。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本周是2020年的第九个周末。&lt;br&gt;这里记录过去一周，我的一些总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://img.liugezhou.online/blog/weekly32.png&quot; alt=&quot;weekly-32&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>每周总结第三十一期</title>
    <link href="http://liugezhou.online/2020/02/22/%E6%AF%8F%E5%91%A8%E6%80%BB%E7%BB%93%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E6%9C%9F/"/>
    <id>http://liugezhou.online/2020/02/22/每周总结第三十一期/</id>
    <published>2020-02-22T10:48:00.000Z</published>
    <updated>2020-02-22T14:44:54.309Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周是2020年的第八个周末。<br>这里记录过去一周，我的一些总结。</p></blockquote><p><img src="http://img.liugezhou.online/weekly31.jpeg" alt="weekly-31"></p><a id="more"></a><h3 id="Feeling"><a href="#Feeling" class="headerlink" title="Feeling"></a>Feeling</h3><blockquote><p>读书与电影会扩展我们的生活半径,唯有读书人是最自由，唯有看电影人是最畅想。<br>看一部电影，读一本书都有身临其境、思想解放的感受。<br>而由于新时代下电影审查的严苛，读书便成为了不二选择。    </p></blockquote><h3 id="指路明灯"><a href="#指路明灯" class="headerlink" title="指路明灯"></a>指路明灯</h3><blockquote><p>世界上最长的电视剧《指路明灯》，该剧最初该剧由ABS在1937年1月25日首次播出,于2009年9月播出最后一集，合计播出18262集，该剧从电台广播剧开始，已播放了72年。吉尼斯纪录称它是世界上最长的电视剧。</p></blockquote><h3 id="视频号"><a href="#视频号" class="headerlink" title="视频号"></a>视频号</h3><blockquote><p>微信公灰度发布视频号，目前进入视频号，视频不能暂停、不能快进、不能静音，只能点赞和评论。</p></blockquote><h3 id="拉里～特斯勒"><a href="#拉里～特斯勒" class="headerlink" title="拉里～特斯勒"></a><a href="https://www.bbc.com/zhongwen/simp/science-51569946?at_campaign=64&at_custom2=twitter&at_custom1=%5Bpost+type%5D&at_custom3=BBC+Chinese&at_medium=custom7&at_custom4=1B94F308-53C9-11EA-8759-A0FEC28169F1" target="_blank" rel="noopener">拉里～特斯勒</a></h3><blockquote><p>早期计算机科学标志性人物拉里·特斯勒（Larry Tesler）–“复制粘贴剪切”功能发明人,于2020年2月17日去世，终年74岁。    </p></blockquote><h3 id="MacOS中如何快读调出终端"><a href="#MacOS中如何快读调出终端" class="headerlink" title="MacOS中如何快读调出终端"></a><a href="https://www.zhihu.com/question/20692634" target="_blank" rel="noopener">MacOS中如何快读调出终端</a></h3><blockquote><p>MacOS中没有快捷键打开终端的快捷键，这篇文章总结了通过 Automator.app设置快捷键打开终端。</p></blockquote><h3 id="Commond-T"><a href="#Commond-T" class="headerlink" title="Commond + T"></a>Commond + T</h3><blockquote><p>Commond + T快捷键可以在浏览器或者终端中开启一个新的标签、终端。</p></blockquote><h3 id="IDEA过期"><a href="#IDEA过期" class="headerlink" title="IDEA过期"></a>IDEA过期</h3><blockquote><p>本周IDEA又一次过期(还可以打开，只有过期提示)，此次更新步骤是：<br>菜单栏依次打开：help、register、Licence、server：<br> 根据提示，将之前licence-server address ,<br>由<a href="http://jetbrains-license-server改为" target="_blank" rel="noopener">http://jetbrains-license-server改为</a><br><a href="http://fls.jetbrains-agent.com" target="_blank" rel="noopener">http://fls.jetbrains-agent.com</a>    </p><p>若不是以server的，又看到了一篇过期激活教程：<a href="https://mp.weixin.qq.com/s/WwLSaNCHL7FeB2mOxNt2dw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/WwLSaNCHL7FeB2mOxNt2dw</a></p></blockquote><h3 id="https-www-npmjs-com"><a href="#https-www-npmjs-com" class="headerlink" title="https://www.npmjs.com/"></a><a href="https://www.npmjs.com/" target="_blank" rel="noopener">https://www.npmjs.com/</a></h3><blockquote><p>npmjs网站用来查看npm包基本信息，包括周下载量、版本号、证书类型、包大小、文件数量、Issues、仓库地址、包使用介绍等等。</p></blockquote><h3 id="包管理工具"><a href="#包管理工具" class="headerlink" title="包管理工具"></a>包管理工具</h3><p><img src="http://img.liugezhou.online/blog%2Fpackagetools.png" alt="packagetools"></p><h3 id="How-to-Install-MongoDB-on-CentOS-7"><a href="#How-to-Install-MongoDB-on-CentOS-7" class="headerlink" title="How to Install MongoDB on CentOS 7"></a><a href="https://linuxize.com/post/how-to-install-mongodb-on-centos-7/" target="_blank" rel="noopener">How to Install MongoDB on CentOS 7</a></h3><blockquote><p>一篇在CentOS7上安装MongoDB的最简单教程。 步骤如下： </p><ol><li><code>vi /etc/yum.repos.d/</code>       </li><li>编辑内容如下： <pre><code class="[mongodb-org-4.0]">name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.0/x86_64/gpgcheck=1  enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc</code></pre></li><li><code>yum install mongodb-org(验证安装结果：rpm -qa |grep mongodb)</code>    </li><li>启动服务：<code>sudo systemctl start mongod</code>、<br>停止服务：<code>sudo systemctl stop mongod</code>、<br>修改配置文件后重启：<code>systemctl restart mongod</code>     </li><li>MongoDB默认端口上27017，检查端口是否开启：<code>netstat -natp | grep 27017</code></li><li><code>mongo</code>，验证服务开启，进入命令行可查看版本：db.version();     </li><li>想要修改mongo默认端口，<code>vi /etc/mongd.conf</code>      </li></ol></blockquote><h3 id="本周产出"><a href="#本周产出" class="headerlink" title="本周产出"></a>本周产出</h3><blockquote><p>本周总结了两篇博文：  </p><ul><li><a href="https://www.liugezhou.online/2020/02/18/ssh%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">ssh远程登录服务器的一些问题</a> </li><li><a href="https://www.liugezhou.online/2020/02/21/%E4%BB%8E%E6%9C%AC%E5%9C%B0%E5%8F%91%E5%B8%83%E4%B8%8A%E7%BA%BF%E5%92%8C%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84Node.js%E9%A1%B9%E7%9B%AE/" target="_blank" rel="noopener">从本地发布上线和更新服务器的Node.js项目</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本周是2020年的第八个周末。&lt;br&gt;这里记录过去一周，我的一些总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://img.liugezhou.online/weekly31.jpeg&quot; alt=&quot;weekly-31&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每周分享" scheme="http://liugezhou.online/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="每周分享" scheme="http://liugezhou.online/tags/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
</feed>
